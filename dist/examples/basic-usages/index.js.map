{"version":3,"file":"index.js","sources":["../../../spui/utils.ts","../../../spui/stream.ts","../../../spui/dom.ts","../../../spui/observable-array.ts","../../../examples/basic-usages/index.ts"],"sourcesContent":["export interface StringKeyMap<T> {\r\n    [key: string]: T;\r\n}\r\nexport type Functor0P = () => any;\r\nexport type Functor1P = (value: any) => any;\r\n\r\nexport function isFunction(obj): obj is Function {\r\n    return typeof obj === 'function';\r\n}\r\n\r\nexport function isNode(obj): obj is Node {\r\n    return obj.nodeType;\r\n}\r\n\r\nexport function isObject(obj): obj is Object {\r\n    return typeof obj === 'object';\r\n}\r\n\r\nexport function isString(obj): obj is string {\r\n    return typeof obj === 'string'; \r\n}\r\n\r\nexport function expandValue(value): any {\r\n    return isFunction(value) ? value() : value; \r\n}\r\n\r\nexport function remove(array: Array<any>, value) {\r\n    const i = array.indexOf(value);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n    return array;\r\n}","import { isFunction, remove, Functor0P, Functor1P} from './utils';\r\nexport interface GetterSetter {\r\n    (value?): any;\r\n}\r\nexport interface Stream extends GetterSetter {\r\n    _backingValue: any;\r\n    _listeners?: Array<Functor1P>;\r\n    _transform?: Functor1P;\r\n}\r\nexport interface Computation {\r\n    computedStream: Stream;\r\n    dependencies: Stream[];\r\n}\r\n\r\nlet runningComputations: Array<Computation> = [];\r\n\r\nfunction setValue(stream, value) {\r\n    stream._backingValue = stream._transform ? stream._transform(value) : value;\r\n    if (stream._listeners.length) {\r\n        const dependencies = stream._listeners.slice();\r\n        for (let i = 0; i < dependencies.length; ++i) {\r\n            dependencies[i](stream._backingValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport function valueStream(initialValue?, transform?: Functor1P) : Stream {\r\n    let stream = function (value?) {\r\n        if (arguments.length) {\r\n            setValue(stream, value);\r\n        } else {\r\n            // Check to create a new computation dependency:\r\n            if (runningComputations.length) {\r\n                const computation = runningComputations[runningComputations.length - 1];\r\n                addListener(stream, computation.computedStream);\r\n                computation.dependencies.push(stream);\r\n            }\r\n        }\r\n        \r\n        return stream._backingValue;\r\n    } as Stream;\r\n\r\n    stream._listeners = [];\r\n    if (transform) {\r\n        stream._transform = transform;\r\n    }\r\n    if (initialValue !== undefined) {\r\n        setValue(stream, initialValue);\r\n    }\r\n\r\n    return stream;\r\n}\r\n\r\nexport function addListener(stream: Stream, listener: Functor1P) : Functor0P {\r\n    if (stream._listeners.indexOf(listener) === -1) {\r\n        stream._listeners.push(listener);\r\n    }\r\n    return () => removeListener(stream, listener);\r\n}\r\n\r\nexport function removeListener(valueStream: Stream, listener: Functor1P) : void {\r\n    remove(valueStream._listeners, listener);\r\n}\r\n\r\nexport function addTransform(valueStream: Stream, transform: Functor1P) {\r\n    if (valueStream._transform) {\r\n        const firstTransform = valueStream._transform;\r\n        valueStream._transform = value => transform(firstTransform(value));\r\n    } else {\r\n        valueStream._transform = transform;\r\n    }\r\n}\r\n\r\nexport function map(vs: Stream, transform: Functor1P) : Stream {\r\n    const computedStream = valueStream(vs(), transform);\r\n    addListener(vs, computedStream);\r\n    return computedStream;\r\n}\r\n\r\nfunction createComputation() : Computation {\r\n    return {\r\n        computedStream: valueStream(),\r\n        dependencies: []\r\n    };\r\n}\r\n\r\nexport function compute(functor: Functor0P) : Computation {\r\n    const computation = createComputation();\r\n    computation.computedStream(_compute());\r\n    addTransform(computation.computedStream, _compute);\r\n    return computation;\r\n\r\n    function _compute() {\r\n        runningComputations.push(computation);\r\n        let result, error;\r\n        try {\r\n            result = functor();\r\n        }\r\n        catch (e) {\r\n            error = e;\r\n        }\r\n        runningComputations.pop();\r\n        if (error) throw error;\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function computeStream(functor: Functor0P): Stream {\r\n    return compute(functor).computedStream;\r\n}\r\n\r\nexport function eventStream(source: EventTarget | string, name: string, useCapture?) {\r\n    const eventStream = valueStream();\r\n    const element = source instanceof EventTarget ? source : document.querySelector(source);\r\n    element.addEventListener(name, eventStream, !!useCapture);\r\n    return eventStream;\r\n}","import { isNode, isFunction, isString, isObject, expandValue, StringKeyMap, Functor0P, Functor1P} from './utils';\r\nimport * as s from './stream';\r\nimport {ObservableArray} from './observable-array';\r\n\r\nexport type Attrs = StringKeyMap<any>;\r\nexport type ElementGenerator = () => HTMLElement;\r\nexport type StringGenerator = () => string;\r\nexport type Child = string | HTMLElement | ElementGenerator | StringGenerator;\r\nexport type Children = Array<Child> | Child;\r\nexport type ModelElementCreator = (listRootElement: HTMLElement, model: any, indeX: number) => HTMLElement;\r\n\r\nexport function h(tagName: string, attrs?: Attrs, children?: Children) {\r\n    const element = document.createElement(tagName);\r\n    if (attrs) {\r\n        setAttrs(element, attrs);\r\n    }\r\n\r\n    if (children) {\r\n        setChildren(element, children);\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction setAttrs(element: HTMLElement, attr: Attrs) {\r\n    // For each attr, setup a computation. When that computation is triggered, we patch this argument:\r\n    for (const attrName in attr) {\r\n        const attrValue = attr[attrName];\r\n        // Event registration handling.\r\n        if (attrName.startsWith('on')) {\r\n            const eventName = attrName.slice(2);\r\n            element.addEventListener(eventName, attrValue);\r\n            continue;\r\n        }\r\n\r\n        // If attrValue is an object (for classes and styles)\r\n        // or if attrValue is a function: setup a computation\r\n        if (isFunction(attrValue) || isObject(attrValue)) {\r\n            // For all attributes resulting from a computation setup auto update:\r\n            const computation = s.compute(() => {\r\n                setAttr(element, attrName, attrValue);\r\n            });\r\n\r\n            // Check if the attrValue function has actually registered a dependency:\r\n            if (computation.dependencies.length) {\r\n                s.addTransform(computation.computedStream, () => {\r\n                    setAttr(element, attrName, attrValue);\r\n                });\r\n            }\r\n            continue;\r\n        }\r\n        // Handle static attributes:\r\n        setAttr(element, attrName, attrValue);\r\n    }\r\n}\r\n\r\nfunction setAttr(element: HTMLElement, attr: string, value: any) {\r\n    value = expandValue(value);\r\n    switch(attr) {\r\n        case 'class':\r\n        case 'className':\r\n            setClass(element, value);\r\n        break\r\n        case 'style':\r\n            setStyle(element, value);\r\n        break;\r\n        default: \r\n            if (attr in element) {\r\n                element[attr] = value;\r\n            } else if (value === false) {\r\n                element.removeAttribute(attr);\r\n            } else if (value === true) {\r\n                // If value is a boolean, set it to \"\" to only enable it in DOM.\r\n                element.setAttribute(attr, \"\");\r\n            } else {\r\n                element.setAttribute(attr, value);\r\n            }\r\n    }\r\n}\r\n\r\nfunction setClass(element: HTMLElement, className: string | Attrs) {\r\n    if (isString(className)) {\r\n        element.className = className;\r\n    } else {\r\n        let newClass = '';\r\n        for (const key in className) {\r\n            let value = className[key];\r\n            value = expandValue(value);\r\n            if (value) {\r\n                newClass += (newClass == '' ? '' : ' ' ) + key;\r\n            }\r\n        }\r\n        element.className = newClass;\r\n    }\r\n}\r\n\r\nfunction setStyle(element: HTMLElement, style: Attrs | string, value?) {\r\n    if (isString(style)) {\r\n        element.setAttribute('style', style);\r\n    } else {\r\n        for (const key in style) {\r\n            const styleValue = expandValue(style[key]);\r\n            element.style[key] = styleValue;\r\n        }\r\n    }\r\n}\r\n\r\nfunction setChildren(element: HTMLElement, children: Children) {\r\n    if (Array.isArray(children)) {\r\n        for (let i = 0; i < children.length; ++i) {\r\n            appendChild(element, children[i]);\r\n        }\r\n    } else {\r\n        appendChild(element, children);\r\n    }\r\n}\r\n\r\nfunction appendChild(element: HTMLElement, child: Child) {\r\n    if (!child) return;\r\n    if (isFunction(child)) {\r\n        let resolvedChild: HTMLElement | string;\r\n        const computation = s.compute(() => {\r\n            resolvedChild = child();\r\n        });\r\n\r\n        let childNode = isNode(resolvedChild) ? resolvedChild : document.createTextNode(resolvedChild);\r\n        element.appendChild(childNode);\r\n\r\n        if (computation.dependencies.length) {\r\n            // Auto update in case children is a stream\r\n            s.addTransform(computation.computedStream, () => {\r\n                const oldChildNode = childNode;\r\n                childNode = isNode(resolvedChild) ? resolvedChild : document.createTextNode(resolvedChild);\r\n                element.replaceChild(childNode, oldChildNode);\r\n            });\r\n        }\r\n    } else if (isNode(child)) {\r\n        element.appendChild(child);\r\n    } else {\r\n        element.appendChild(document.createTextNode(child));\r\n    }\r\n}\r\n\r\nexport class ElementListMapper {\r\n    modelsObs: ObservableArray<any>;\r\n    listRootElement: HTMLElement;\r\n    elementCreator: ModelElementCreator;\r\n    key: string;\r\n    modelToElement: Map<any, HTMLElement>;\r\n    constructor(listRootElement: HTMLElement, modelsObs: ObservableArray<any>, elementCreator: ModelElementCreator, key?: string) {\r\n        this.listRootElement = listRootElement;\r\n        this.modelsObs = modelsObs;\r\n        this.elementCreator = elementCreator;\r\n        // TODO: What to do with key?\r\n        this.key = key;\r\n        this.modelToElement = new Map<any, HTMLElement>();\r\n        modelsObs.addListener(this.onModelChange.bind(this));\r\n\r\n        if (this.modelsObs.length) {\r\n            const nodes = this.createElements(this.modelsObs.array, 0);\r\n            this.listRootElement.appendChild(nodes);\r\n        }\r\n    }\r\n\r\n    onModelChange (op: string, args: any[]) {\r\n        switch(op) {\r\n            case 'pop':\r\n                this.listRootElement.removeChild(this.listRootElement.lastChild);\r\n                break;\r\n            case 'push': {\r\n                const nodes = this.createElements(args, this.modelsObs.length - args.length);\r\n                this.listRootElement.appendChild(nodes);\r\n                break;\r\n            }\r\n            case 'reverse': {\r\n                const frag = new DocumentFragment();\r\n                while (this.listRootElement.lastChild) {\r\n                    frag.appendChild(this.listRootElement.removeChild(this.listRootElement.lastChild));\r\n                }\r\n                this.listRootElement.appendChild(frag);\r\n                break;\r\n            };\r\n            case 'splice':\r\n                const childNodes = this.listRootElement.childNodes;\r\n                const spliceStart = args[0] < 0 ? childNodes.length + args[0] : args[0];\r\n                const deleteCount = args.length > 1 ? args[1] : childNodes.length - spliceStart;\r\n                const deleteStop = spliceStart + deleteCount;\r\n                // TODO: have a more flexible splice that doesn't ALWAYS create a toRemove array\r\n                // or keep the list of ordered nodes on the side?\r\n                const toRemove = [];\r\n                for (let i = spliceStart; i < deleteStop; i++) {\r\n                    toRemove.push(childNodes[i]);\r\n                }\r\n                for (let i = 0; i < toRemove.length; ++i) {\r\n                    this.listRootElement.removeChild(toRemove[i]);\r\n                }\r\n\r\n                if (args.length > 2) {\r\n                    const nodes = this.createElements(args.slice(2), spliceStart);\r\n                    this.listRootElement.insertBefore(nodes, childNodes[spliceStart]);\r\n                }\r\n                break;\r\n            case 'shift':\r\n                this.listRootElement.removeChild(this.listRootElement.firstChild);\r\n                break;\r\n            case 'sort': {\r\n                const frag = new DocumentFragment();\r\n                for (let i = 0; i < this.modelsObs.length; ++i) {\r\n                    const node = this.modelToElement.get(this.modelsObs.array[i]);\r\n                    this.listRootElement.removeChild(node);\r\n                    frag.appendChild(node);\r\n                }\r\n                this.listRootElement.appendChild(frag);\r\n                break;\r\n            }\r\n            case 'unshift': {\r\n                const nodes = this.createElements(args, 0);\r\n                this.listRootElement.insertBefore(nodes, this.listRootElement.firstChild);\r\n                break;\r\n            }\r\n            case 'changes': {\r\n                const changes = args;\r\n                for (let i = 0; i < changes.length; ++i) {\r\n                    this.onModelChange(changes[i][0], changes[i][1]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    createElements(models: Array<any>, startIndex: number) : DocumentFragment | HTMLElement {\r\n        if (models.length > 1) {\r\n            const frag = new DocumentFragment();\r\n            for (let i = 0; i < models.length; ++i) {\r\n                const childNode = this.createElement(models[i], startIndex++);\r\n                frag.appendChild(childNode);\r\n            }\r\n            return frag;\r\n        }\r\n\r\n        return this.createElement(models[0], startIndex);\r\n    }\r\n\r\n    createElement(model, index: number) : HTMLElement {\r\n        const childNode = this.elementCreator(this.listRootElement, model, index);\r\n        this.modelToElement.set(model, childNode);\r\n        return childNode;\r\n    }\r\n}\r\n\r\nexport function elementList(tagName: string, attrs: Attrs, models: ObservableArray<any>, nodeCreator: ModelElementCreator, key?: string) {\r\n    const listRootElement = h(tagName, attrs);\r\n    (parent as any)._elementList = new ElementListMapper(listRootElement, models, nodeCreator, key);\r\n    return  listRootElement;\r\n}\r\n\r\nexport function isElementList(nodeListElement: HTMLElement) : boolean {\r\n    return !!((parent as any)._elementList);\r\n}\r\n\r\nexport function getElementList(nodeListElement: HTMLElement): ElementListMapper {\r\n    return (parent as any)._elementList;\r\n}\r\n\r\nexport function targetAttr(eventAttrName: string, functor: s.Stream | Functor1P) {\r\n    return function (event) {\r\n        return functor(event.target[eventAttrName]);\r\n    }\r\n}","import {remove} from './utils';\r\nexport type Changes = Array<Array<any>>;\r\nexport type ArrayListener = (op: string, args: any[], opReturnValue: any) => void;\r\n\r\nexport class ObservableArray<T> {\r\n    array: T[];\r\n    listeners: ArrayListener[];\r\n    changes: Changes;\r\n    constructor(array?: T[]) {\r\n        this.array = array || [];\r\n        this.listeners = [];\r\n        this.changes = null;\r\n    }\r\n\r\n    get length () {\r\n        return this.array.length;\r\n    }\r\n\r\n    push(...args) {\r\n        const retValue = this.array.push.apply(this.array, args);\r\n        this.logChange('push', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    pop(...args) {\r\n        const retValue = this.array.pop.apply(this.array, args);\r\n        this.logChange('pop', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    reverse(...args) {\r\n        const retValue = this.array.reverse.apply(this.array, args);\r\n        this.logChange('reverse', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    shift(...args) {\r\n        const retValue = this.array.shift.apply(this.array, args);\r\n        this.logChange('shift', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    splice(...args) {\r\n        const retValue = this.array.splice.apply(this.array, args);\r\n        this.logChange('splice', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    sort(...args) {\r\n        const retValue = this.array.sort.apply(this.array, args);\r\n        this.logChange('sort', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    unshift(...args) {\r\n        const retValue = this.array.unshift.apply(this.array, args);\r\n        this.logChange('unshift', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    remove(value: T) {\r\n        const index = this.array.indexOf(value);\r\n        this.splice(index, 1);\r\n    }\r\n\r\n    applyChanges(changeFunctor: () => any) {\r\n        this.changes = [];\r\n        let result;\r\n        try {\r\n            result = changeFunctor();\r\n        } catch (e) {\r\n            this.changes = null;\r\n            throw e;\r\n        }\r\n        if (this.changes) {\r\n            this.emit('changes', this.changes);\r\n        }\r\n        this.changes = null;\r\n        return result;\r\n    }\r\n\r\n    addListener(callback: ArrayListener) {\r\n        this.listeners.push(callback);\r\n        return () => this.removeListener(callback);\r\n    }\r\n\r\n    removeListener(callback: ArrayListener) {\r\n        return remove(this.listeners, callback);\r\n    }\r\n\r\n    logChange(method, returnValue, args) {\r\n        if (this.changes === null) {\r\n            this.emit(method, args, returnValue);\r\n        } else {\r\n            this.changes.push([method, args, returnValue]);\r\n        }\r\n    }\r\n\r\n    emit(op: string, args: any[], opReturnValue?: any) {\r\n        for (let i = 0; i < this.listeners.length; ++i) {\r\n            this.listeners[i](op, args, opReturnValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport type FilterPredicate<T> = (value: T) => any;\r\nexport class Filter<T> {\r\n    src: ObservableArray<T>;\r\n    filtered: ObservableArray<T>;\r\n    predicate: FilterPredicate<T>;\r\n    constructor(src: ObservableArray<T>, predicate: FilterPredicate<T>) {\r\n        this.src = src;\r\n        this.filtered = new ObservableArray();\r\n        this.predicate = predicate;\r\n\r\n        const srcFiltered = this.src.array.filter(this.predicate);\r\n        this.filtered.push(...srcFiltered);\r\n\r\n        this.src.addListener(this.srcChanged.bind(this));\r\n    }\r\n\r\n    applyFilter(predicate: FilterPredicate<T> = null, reset: boolean = false): Changes {\r\n        if (predicate) {\r\n            this.predicate = predicate;\r\n        }\r\n        const changes = this.filtered.applyChanges(() => {\r\n            if (reset) {\r\n                // Reset filter completely:\r\n                this.filtered.splice(0);\r\n                const filteredValues = this.src.array.filter(this.predicate);\r\n                if (filteredValues.length) {\r\n                    this.filtered.push(...filteredValues);\r\n                }\r\n                return this.filtered.changes;\r\n            } \r\n\r\n            // Apply only differences between 2 filter run:\r\n            let filterIndex = 0;\r\n            for (let srcIndex = 0; srcIndex < this.src.length; ++srcIndex) {\r\n                const srcValue = this.src.array[srcIndex];\r\n                if (this.predicate(srcValue)) {\r\n                    if (filterIndex < this.filtered.length) {\r\n                        if (this.filtered.array[filterIndex] !== srcValue) {\r\n                            this.filtered.splice(filterIndex, 0, srcValue);\r\n                        }\r\n                    } else {\r\n                        this.filtered.splice(filterIndex, 0, srcValue);\r\n                    }\r\n                    ++filterIndex;\r\n                } else {\r\n                    if (filterIndex < this.filtered.length) {\r\n                        if (this.filtered.array[filterIndex] === srcValue) {\r\n                            this.filtered.splice(filterIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // All the others elements are not needed anymore.\r\n            if (filterIndex < this.filtered.length) {\r\n                this.filtered.splice(filterIndex);\r\n            }\r\n            return this.filtered.changes;\r\n        });\r\n        return changes;\r\n    }\r\n\r\n\r\n    private srcChanged(op: string, args: any[], opReturnValue?: any) {\r\n        switch (op) {\r\n            case 'pop':\r\n                if (this.filtered.length && this.filtered.array[this.filtered.length - 1] === opReturnValue) {\r\n                    this.filtered.pop();\r\n                }\r\n                break;\r\n            case 'push': {\r\n                const filterPushedData = args.filter(this.predicate);\r\n                if (filterPushedData.length) {\r\n                    this.filtered.push(...filterPushedData);\r\n                }\r\n                break;\r\n            }\r\n            case 'reverse': {\r\n                if (this.filtered.length) {\r\n                    this.filtered.reverse();\r\n                }\r\n                break;\r\n            };\r\n            case 'splice':\r\n                const elementsToRemove = opReturnValue;\r\n\r\n                const filteredElementsToRemove = elementsToRemove.filter(this.predicate);\r\n                let filteredElementsAdded;\r\n                if (args.length > 2) {\r\n                    const elementsAdded = args.slice(2);\r\n                    filteredElementsAdded = elementsAdded.filter(this.predicate);\r\n                }\r\n\r\n                const srcSpliceStart = args[0] < 0 ? \r\n                    args[0] + this.src.length + elementsToRemove.length - (args.length > 2 ? args.length - 2 : 0) : \r\n                    args[0];\r\n                // Find the insertion point from the start in case not all elements are unique.\r\n                let filteredSpliceStart = 0;\r\n                for (let i = 0; i < srcSpliceStart; ++i) {\r\n                    if (this.predicate(this.src.array[i])) {\r\n                        ++filteredSpliceStart;\r\n                    }\r\n                }\r\n\r\n                if (filteredElementsToRemove && filteredElementsToRemove.length) {\r\n                    if (filteredElementsAdded && filteredElementsAdded.length) {\r\n                        this.filtered.splice(filteredSpliceStart, filteredElementsToRemove.length, ...filteredElementsAdded);\r\n                    } else {\r\n                        this.filtered.splice(filteredSpliceStart, filteredElementsToRemove.length);\r\n                    }\r\n                } else if (filteredElementsAdded && filteredElementsAdded.length) {\r\n                    this.filtered.splice(filteredSpliceStart, 0, ...filteredElementsAdded);\r\n                }\r\n                break;\r\n            case 'shift':\r\n                if (this.filtered.length && this.filtered.array[0] === opReturnValue) {\r\n                    this.filtered.shift();\r\n                }\r\n                break;\r\n            case 'sort': {\r\n                if (this.filtered.length) {\r\n                    this.filtered.sort();\r\n                }\r\n                break;\r\n            }\r\n            case 'unshift': {\r\n                const filterUnshiftedData = args.filter(this.predicate);\r\n                if (filterUnshiftedData.length) {\r\n                    this.filtered.unshift(...filterUnshiftedData);\r\n                }\r\n                break;\r\n            }\r\n            case 'changes': {\r\n                const changes = args;\r\n                for (let i = 0; i < changes.length; ++i) {\r\n                    this.srcChanged.apply(this, changes[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import * as sp from '../../spui/index';\r\nimport * as utils from '../../spui/utils';\r\nconst h = sp.h;\r\n\r\ninterface Example {\r\n    title: string;\r\n    exampleGenerator: Function;\r\n}\r\nconst examples : Example[] = [];\r\n\r\nfunction marked(mdText) {\r\n    return (window as any).marked(mdText);\r\n}\r\n\r\nfunction randomNumber(maxValue: number) {\r\n    return Math.floor(Math.random() * maxValue);\r\n}\r\n\r\nfunction randomIndex(elements: any[]) {\r\n    return randomNumber(elements.length);\r\n}\r\n\r\nfunction randomElement(elements: any[]) {\r\n    return elements[randomIndex(elements)];\r\n}\r\n\r\nfunction cleanCodeSnippet(snippet: string) {\r\n    let lines = snippet.split('\\n');\r\n    // Remove function line:\r\n    lines.splice(0, 1);\r\n    // Remove bracket on last lines:\r\n    lines.splice(lines.length - 1, 1);\r\n\r\n    // Trim first indent:\r\n    lines = lines.map(l => {\r\n        l = l.slice(4)\r\n        if (l.startsWith('return ')) {\r\n            l = l.replace('return ', '');\r\n        }\r\n        return l;\r\n    });\r\n\r\n    return lines.join('\\n');\r\n}\r\n\r\nfunction createCodeSnippet(f: Function) {\r\n    return marked('```javascript\\n' + cleanCodeSnippet(f.toString()) + '\\n```');\r\n}\r\n\r\nfunction createExample(title: string, exampleGenerator: Function): Example {\r\n    return {\r\n        title,\r\n        exampleGenerator\r\n    };\r\n}\r\n\r\nfunction addExample(title: string, exampleGenerator: Function) {\r\n    const ex = createExample(title, exampleGenerator);\r\n    examples.push(ex);\r\n    return ex;\r\n}\r\n\r\nfunction logView(commands) {\r\n    for (let i = 0; i < commands.length; i += 2) {\r\n        const command = commands[i];\r\n        const result = commands[i + 1];\r\n    }\r\n\r\n    return h('pre', {class: 'log-view'}, commands.map((c, index) => {\r\n        if ((index % 2) === 0) {\r\n            // Command:\r\n            return h('div', { class: 'command' }, '> ' + c);\r\n        }\r\n\r\n        // Result:\r\n        return h('div', { class: 'result' }, c);\r\n    }));\r\n}\r\n\r\nfunction createExamplesView(examples: Example[]) {\r\n    return h('div', { class: 'container' }, examples.map(example => {\r\n        let snippetEl;\r\n        const el = h('div', { class: 'row' }, [\r\n            h('h3', { class: 'col-md-12' }, example.title),\r\n            snippetEl = h('div', { class: 'col-md-8'}),\r\n            h('div', { class: 'col-md-4' }, example.exampleGenerator())\r\n        ]);\r\n        snippetEl.innerHTML = createCodeSnippet(example.exampleGenerator);\r\n        return el;\r\n    }));\r\n}\r\n\r\n/////////////////////////////////////////////////////////\r\n// Stream\r\n\r\nfunction valueStreamEx() {\r\n    const model = sp.valueStream(42);\r\n\r\n    // stream called with no param: getter\r\n    console.log(model());\r\n\r\n    // stream called with a param: setter\r\n    model(71);\r\n\r\n     // Prints 71\r\n    console.log(model());\r\n\r\n    // Create a stream with a transformer function:\r\n    const doublingModel = sp.valueStream(42, value => value * 2);\r\n     // Prints 84\r\n    console.log(doublingModel());\r\n    // Thuis will invoke the transformer before setting the stream value:\r\n    doublingModel(21);\r\n     // Prints 42\r\n    console.log(doublingModel());\r\n}\r\n\r\nfunction valueStreamExView() {\r\n    return logView([\r\n        'console.log(model())', '42',\r\n        'console.log(model())', '71',\r\n    ]);\r\n}\r\naddExample('value stream', valueStreamEx);\r\n\r\nfunction streamTransformEx() {\r\n    const model = sp.valueStream(42);\r\n    // Prints 42\r\n    console.log(model());\r\n\r\n    // Modify the stream itself by adding a transform:\r\n    sp.addTransform(model, value => value * 2);\r\n\r\n    // Prints 84\r\n    console.log(model()); \r\n}\r\naddExample('value transform', streamTransformEx);\r\n\r\n\r\nfunction streamListenerEx() {\r\n    const model = sp.valueStream(42);\r\n    \r\n    const stopListening = sp.addListener(model, value => {\r\n        console.log('Model has changed: ', value);\r\n    });\r\n\r\n    // prints: Model has changed: 11\r\n    model(11);\r\n\r\n    stopListening();\r\n    // This won't print anything.\r\n    model(22);\r\n}\r\naddExample('stream listener', streamListenerEx);\r\n\r\nfunction streamMapEx () {\r\n    const model = sp.valueStream(42);\r\n\r\n    // Create a new stream that maps the original model value:\r\n    const mappedModel = sp.map(model, value => value * 2);\r\n\r\n    // Prints 42\r\n    console.log(model());\r\n\r\n    // Prints 84\r\n    console.log(mappedModel());\r\n\r\n    model(11);\r\n\r\n    // Prints 22\r\n    console.log(mappedModel());\r\n}\r\naddExample('stream map', streamMapEx);\r\n\r\nfunction computeStreamEx() {\r\n    const firstName = sp.valueStream('Donald');\r\n    const lastName = sp.valueStream('Knuth');\r\n    const fullName = sp.computeStream(() => {\r\n        return firstName() + ' ' + lastName();\r\n    });\r\n\r\n    // Prints: Donald Knight\r\n    console.log(fullName());\r\n\r\n    lastName('Duck');\r\n\r\n    // Prints Donal Duck. And loses all respect.\r\n    console.log(fullName());\r\n}\r\naddExample('compute stream', computeStreamEx);\r\n\r\n/////////////////////////////////////////////////////////\r\n// hyperscript examples:\r\n\r\nfunction hStaticEx() {\r\n    return h('div', { class: 'alert alert-info'}, 'Hello!')\r\n}\r\naddExample('h with static values', hStaticEx);\r\n\r\nfunction hChildrenEx() {\r\n    return h('div', {class: 'child-container'}, [\r\n        'this is a text children',\r\n        h('input', {placeholder: 'what is up doc?'}),\r\n        h('button', {}, 'Button child')\r\n    ])\r\n}\r\naddExample('h with children', hChildrenEx);\r\n\r\nfunction hClassEx1() {\r\n    const labels = [\r\n        {text: 'this is some info', info: true},\r\n        { text: 'this is dangerous!', danger: true }\r\n    ] as any[];\r\n\r\n    // class attribute can be a string or an object where each key is used as a class\r\n    // if the corresponding value is truthy.\r\n    return h('div', { class: 'child-container'}, labels.map(label => {\r\n        return h('div', { class: { \r\n                            alert: true,\r\n                            'alert-info': label.info,\r\n                            'alert-danger': label.danger \r\n                        } }, \r\n            label.text)\r\n    }));\r\n}\r\naddExample('class as object', hClassEx1);\r\n\r\nfunction hStyleEx() {\r\n    // style attribute can be either a string or an object\r\n    return h('div', {}, [\r\n        h('div', {style: 'color: black; background-color: grey;padding: 10px;'}, 'dark label #1'),\r\n        h('div', { style: { color: 'grey', backgroundColor: 'black', padding: '10px' } }, 'darker label #2')\r\n    ]);\r\n}\r\naddExample('style as object', hStyleEx);\r\n\r\nfunction hBooleanAttrs() {\r\n    // Attributre with a boolean value, are setup specially in the DOM\r\n    return h('div', {class: 'child-container'}, [\r\n        // <input placeholder=\"this is writable\">\r\n        h('input', { placeholder: 'this is writable', readonly: false, disabled: false}),\r\n        // <input placeholder=\"this is readonly\" readonly>\r\n        h('input', { placeholder: 'this is readonly', readonly: true}),\r\n        // <input placeholder=\"this is disabled\" disabled>\r\n        h('input', { placeholder: 'this is disabled', disabled: true }),\r\n    ]);\r\n}\r\naddExample('boolean attributes', hBooleanAttrs);\r\n\r\nfunction eventsEx() {\r\n    let input, button, buttonText = 'Roll D6';\r\n    return h('div', { class: 'child-container' }, [\r\n        input = h('input', { placeholder: 'this is readonly', readonly: true, value: 1 }),\r\n        // Listener to an event is adding an attribute of name : on<eventName>\r\n        button = h('button', {\r\n            onclick: () => {\r\n                // h() returns an HTMLElement. So it is really easy changing the value of input:\r\n                input.value = randomNumber(6) + 1;\r\n            },\r\n            onmouseenter: () => {\r\n                button.innerText = 'Click to roll';\r\n            },\r\n            onmouseleave: () => {\r\n                button.innerText = buttonText;\r\n            }\r\n        },\r\n        buttonText),\r\n    ]);\r\n}\r\naddExample('events', eventsEx);\r\n\r\n/////////////////////////////////////////////////////////\r\n// Model changes auto updating\r\n\r\nfunction hClassAutoUpdateEx() {\r\n    // Attribute with a boolean value, are setup specially in the DOM\r\n    const strikeIt = sp.valueStream(false);\r\n    return h('div', { class: 'child-container' }, [\r\n        h('button', { onclick: () => strikeIt(!strikeIt()) }, 'Toggle'),\r\n        // Stream used directly for strike class\r\n        h('div', { class: { strike: strikeIt } }, 'is this done?'),\r\n        // Computation created for the whole class value\r\n        h('div', { class: () => strikeIt() ? 'strike' : '' }, 'is this done?')\r\n    ]);\r\n}\r\naddExample('class changes auto-update', hClassAutoUpdateEx);\r\n\r\n// style changes\r\nfunction hStyleAutoUpdateEx() {\r\n    // Attribute with a boolean value, are setup specially in the DOM\r\n    const colors = ['blue', 'green', 'red', 'black', 'pink'];\r\n    const randomColor = () => randomElement(colors);\r\n    const color1 = sp.valueStream(randomColor());\r\n    const color2 = sp.valueStream(randomColor());\r\n    return h('div', { class: 'child-container' }, [\r\n        h('button', { onclick: () => {\r\n            color1(randomColor());\r\n            color2(randomColor());\r\n        } }, 'random color'),\r\n        h('div', { class: 'color-display', style: () => 'background-color: ' + color1() }),\r\n        h('div', { class: 'color-display', style: { backgroundColor: color2 } })\r\n    ]);\r\n}\r\naddExample('style changes auto-update', hStyleAutoUpdateEx);\r\n\r\nfunction hBooleanAutoUpdateEx() {\r\n    // Attribute with a boolean value, are setup specially in the DOM\r\n    const toggle = sp.valueStream(false);\r\n    const readonlyInput = sp.map(toggle, value => value ? 'this is readonly' : 'this is writable');\r\n    const disabledInput = sp.map(toggle, value => value ? 'this is disabled' : 'this is enabled');\r\n    return h('div', { class: 'child-container' }, [\r\n        h('button', { onclick: () => toggle(!toggle()) }, 'Toggle'),\r\n        h('input', { placeholder: readonlyInput, readonly: toggle }),\r\n        h('input', { placeholder: disabledInput, disabled: toggle }),\r\n    ]);\r\n}\r\naddExample('boolean changes auto-update', hBooleanAutoUpdateEx);\r\n\r\nfunction genericAttributesUpdate() {\r\n    const isChecked = sp.valueStream(true);\r\n    // Attributre with a boolean value, are setup specially in the DOM\r\n    return h('div', {}, [\r\n        h('input', { type: 'checkbox', checked: isChecked, onclick: sp.targetAttr('checked', isChecked) }),\r\n        h('button', {title: () => isChecked() ? 'this is checked' : 'this is unchecked'}, 'Hover me!')\r\n    ]);\r\n}\r\naddExample('generic attributes update', genericAttributesUpdate);\r\n\r\nfunction inputValueChangeEx() {\r\n    const model = sp.valueStream('this is my initial value');\r\n    return h('div', {}, [\r\n        // when the user types into the <input> we update model...\r\n        h('input', { value: model, oninput: sp.targetAttr('value', model) }),\r\n        // ...when model changes, label content updates automatically.\r\n        h('label', {}, model)\r\n    ]);\r\n}\r\naddExample('input value change', inputValueChangeEx);\r\n\r\nfunction childrenValueChangeEx() {\r\n    const counter = sp.valueStream(0);\r\n    return h('div', {}, [\r\n        h('button', { onclick: () => counter(counter() + 1) }, 'Increment'),\r\n        h('label', {style: 'padding: 5px;'}, counter)\r\n    ]);\r\n}\r\naddExample('children value change', childrenValueChangeEx);\r\n\r\nfunction elementListEx () {\r\n    const models = new sp.ObservableArray<any>();\r\n    let count = 0;\r\n    models.push(sp.valueStream(count++));\r\n    models.push(sp.valueStream(count++));\r\n    models.push(sp.valueStream(count++));\r\n    models.push(sp.valueStream(count++));\r\n    return h('div', {}, [\r\n        h('button', { onclick: () => models.push(sp.valueStream(count++)) }, 'Add'),\r\n        h('button', { onclick: () => models.splice(randomIndex(models.array), 1) }, 'Remove random'),\r\n        // elementList will update the <ul> element when new elements are added or removed.\r\n        sp.elementList('ul', {}, models, (listNode: HTMLElement, model: any, index: number) => {\r\n            return h('li', {}, model)\r\n        })\r\n    ]);\r\n}\r\naddExample('elementList', elementListEx);\r\n\r\n\r\n/////////////////////////////////////////////////////////\r\n// Misc\r\nconst names = ['Fenton Will', 'Zeph Arnie', 'Zeke Tod', , 'Chandler Jeb', 'Collin Ernie', \r\n    'Claude Toby', 'Channing Temple', 'Rickey Tracey',\r\n    'Lewis Farley', 'Rolland Spencer', 'Joel Graeme', 'Eldred Benji', 'Eldred Benji', \r\n    'Erik Paxton', 'Brett Shanon', 'Astor Gladwyn', 'Milburn Gaz', 'Newton Huey', 'Nelson Marvyn',\r\n     'Bram Branson', 'Josiah Kingston', 'Asher Hildred', 'Joe Kyler', 'Clay Durward', \r\n     'Biff Thane', 'Dax Walton', 'Fulk Burt', 'Willie Cosmo', 'Emmet Conner', 'Quinlan Cam', \r\n    'Wolf Vinny', 'Larrie Joseph', 'Lester Keir', 'Jerrard Louis',\r\n    'Peter Laurie', 'Don Desmond', 'Sterling Rowland', 'Pearce Raphael', 'Wyatt Harding',\r\n    'Matty Cree', 'Syd Tommie', 'Augustine Dylan', 'Boniface Lionel'\r\n];\r\nconst firstNames = [];\r\nconst lastNames = [];\r\nnames.forEach(name => {\r\n    let split = name.split(' ');\r\n    firstNames.push(split[0]);\r\n    lastNames.push(split[1]);\r\n});\r\n\r\nfunction generateName() {\r\n    return randomElement(firstNames) + ' ' + randomElement(lastNames);\r\n}\r\n\r\nfunction observableArrayEx() {\r\n    const obsArray = new sp.ObservableArray<number>();\r\n\r\n    const off = obsArray.addListener((op, args, returnValue) => {\r\n        console.log(op, args, returnValue);\r\n    });\r\n\r\n    // prints: 'push' [1] 1\r\n    obsArray.push(1);\r\n\r\n    // prints: 'splice' [0, 1, 42] [1]\r\n    obsArray.splice(0, 1, 42);\r\n\r\n    // stop listening\r\n    off();\r\n\r\n    // Doesn't print anything.\r\n    obsArray.push(2);\r\n}\r\naddExample('observable array', observableArrayEx);\r\n\r\nfunction observableArrayApplyChangesEx() {\r\n    const obsArray = new sp.ObservableArray<number>();\r\n\r\n    obsArray.addListener((op, args, returnValue) => {\r\n        console.log(op, args, returnValue);\r\n    });\r\n\r\n    const finalValue = obsArray.applyChanges(() => {\r\n        obsArray.push(1);\r\n        obsArray.splice(0, 1, 42);\r\n\r\n        return obsArray.length;\r\n    });\r\n\r\n    // When this resolve the listener will print this:\r\n    // changes [['push', [1], 1], ['splice' [0, 1, 42] [1] ]]\r\n\r\n    // Notice that finalValue === obsArray.length\r\n}\r\naddExample('observable array apply changes', observableArrayApplyChangesEx);\r\n\r\nfunction filterEx() {\r\n    const models = new sp.ObservableArray<string>();\r\n    for (let i = 0; i < 1000; ++i) models.push(generateName());\r\n    const match = sp.valueStream('');\r\n    const filter = new sp.Filter(models, (model: string) => {\r\n        return match() ? model.indexOf(match()) > -1 : true;\r\n    });\r\n    const triggerFilter = sp.map(match, () => filter.applyFilter());\r\n\r\n    return h('div', {}, [\r\n        h('input', { oninput: sp.targetAttr('value', match) }),\r\n        // elementList will update the <ul> element when new elements are added or removed.\r\n        sp.elementList('ul', {style: 'height: 300px;overflow: auto'}, filter.filtered, (listNode: HTMLElement, model: any, index: number) => {\r\n            return h('li', {}, model)\r\n        })\r\n    ]);\r\n}\r\naddExample('filter', filterEx);\r\n\r\n\r\n/////////////////////////////////////////////////////////\r\n// Complete examples\r\nfunction todoExpressEx() {\r\n    const newTitle = sp.valueStream('');\r\n\r\n    // This will store all our todos and ensure the DOM todo list is kept in sync\r\n    const todos = new sp.ObservableArray();\r\n\r\n    function addTodo() {\r\n        if (newTitle()) {\r\n            // Create a new todo and add it to the model. This will update the DOM list automatically.\r\n            todos.push(createTodo(newTitle()));\r\n            newTitle('');\r\n        }\r\n    };\r\n\r\n    function createTodo(title: string, done = false) {\r\n        return {\r\n            title,\r\n            done: sp.valueStream(done)\r\n        };\r\n    }\r\n\r\n    // Create some initial datas:\r\n    todos.push(createTodo('hit the gym'));\r\n    todos.push(createTodo('procrastinate', true));\r\n    todos.push(createTodo('write unit tests'));\r\n\r\n    // Setup our todo view:\r\n    return h('div', { class: 'todoapp' }, [\r\n        h('div', { class: 'header' }, [\r\n            h('h3', {}, 'todo express'),\r\n            h('input', {\r\n                type: 'text', value: newTitle, placeholder: 'what is up?',\r\n                // Update the title value as the user types in the input.\r\n                oninput: sp.targetAttr('value', newTitle)\r\n            }),\r\n            h('span', { class: 'addBtn', onclick: addTodo }, 'Add'),\r\n        ]),\r\n        // elementList will ensure all the <ul> children are kept in sync with the todos model:\r\n        sp.elementList('ul', {}, todos, (listNode: HTMLElement, todo: any, index: number) => {\r\n            return h('li', {\r\n                // checked is updated if todo.done changes.\r\n                class: { checked: todo.done },\r\n                onclick: () => todo.done(!todo.done())\r\n            }, [\r\n                    todo.title,\r\n                    // Removoing the todo from the model will update the DOM List.\r\n                    h('span', { class: 'closeBtn', onclick: () => todos.remove(todo) }, 'x')\r\n                ]);\r\n        })\r\n    ]);\r\n}\r\naddExample('todo express', todoExpressEx);\r\n\r\nconst view = createExamplesView(examples);\r\ndocument.body.appendChild(view);"],"names":["s.compute","s.addTransform","h","sp.h","sp.valueStream","sp.addTransform","sp.addListener","sp.map","sp.computeStream","sp.targetAttr","sp.ObservableArray","sp.elementList","sp.Filter"],"mappings":";;;;;;oBAM2B,GAAG;IAC1B,OAAO,OAAO,GAAG,KAAK,UAAU,CAAC;CACpC;AAED,gBAAuB,GAAG;IACtB,OAAO,GAAG,CAAC,QAAQ,CAAC;CACvB;AAED,kBAAyB,GAAG;IACxB,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;CAClC;AAED,kBAAyB,GAAG;IACxB,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC;CAClC;AAED,qBAA4B,KAAK;IAC7B,OAAO,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC;CAC9C;AAED,gBAAuB,KAAiB,EAAE,KAAK;IAC3C,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QACV,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtB;IACD,OAAO,KAAK,CAAC;CAChB;;;AClBD,IAAI,mBAAmB,GAAuB,EAAE,CAAC;AAEjD,kBAAkB,MAAM,EAAE,KAAK;IAC3B,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IAC5E,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE;QAC1B,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAC1C,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SACzC;KACJ;CACJ;AAED,qBAA4B,YAAa,EAAE,SAAqB;IAC5D,IAAI,MAAM,GAAG,UAAU,KAAM;QACzB,IAAI,SAAS,CAAC,MAAM,EAAE;YAClB,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC3B;aAAM;;YAEH,IAAI,mBAAmB,CAAC,MAAM,EAAE;gBAC5B,MAAM,WAAW,GAAG,mBAAmB,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACxE,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC;gBAChD,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACzC;SACJ;QAED,OAAO,MAAM,CAAC,aAAa,CAAC;KACrB,CAAC;IAEZ,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,IAAI,SAAS,EAAE;QACX,MAAM,CAAC,UAAU,GAAG,SAAS,CAAC;KACjC;IACD,IAAI,YAAY,KAAK,SAAS,EAAE;QAC5B,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;KAClC;IAED,OAAO,MAAM,CAAC;CACjB;AAED,qBAA4B,MAAc,EAAE,QAAmB;IAC3D,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5C,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpC;IACD,OAAO,MAAM,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;CACjD;AAED,wBAA+B,WAAmB,EAAE,QAAmB;IACnE,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;CAC5C;AAED,sBAA6B,WAAmB,EAAE,SAAoB;IAClE,IAAI,WAAW,CAAC,UAAU,EAAE;QACxB,MAAM,cAAc,GAAG,WAAW,CAAC,UAAU,CAAC;QAC9C,WAAW,CAAC,UAAU,GAAG,KAAK,IAAI,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;KACtE;SAAM;QACH,WAAW,CAAC,UAAU,GAAG,SAAS,CAAC;KACtC;CACJ;AAED,aAAoB,EAAU,EAAE,SAAoB;IAChD,MAAM,cAAc,GAAG,WAAW,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IACpD,WAAW,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IAChC,OAAO,cAAc,CAAC;CACzB;AAED;IACI,OAAO;QACH,cAAc,EAAE,WAAW,EAAE;QAC7B,YAAY,EAAE,EAAE;KACnB,CAAC;CACL;AAED,iBAAwB,OAAkB;IACtC,MAAM,WAAW,GAAG,iBAAiB,EAAE,CAAC;IACxC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvC,YAAY,CAAC,WAAW,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IACnD,OAAO,WAAW,CAAC;IAEnB;QACI,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,MAAM,EAAE,KAAK,CAAC;QAClB,IAAI;YACA,MAAM,GAAG,OAAO,EAAE,CAAC;SACtB;QACD,OAAO,CAAC,EAAE;YACN,KAAK,GAAG,CAAC,CAAC;SACb;QACD,mBAAmB,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,KAAK;YAAE,MAAM,KAAK,CAAC;QACvB,OAAO,MAAM,CAAC;KACjB;CACJ;AAED,uBAA8B,OAAkB;IAC5C,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC;CAC1C;AAED,AAKC;;;aCzGiB,OAAe,EAAE,KAAa,EAAE,QAAmB;IACjE,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAChD,IAAI,KAAK,EAAE;QACP,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAC5B;IAED,IAAI,QAAQ,EAAE;QACV,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;KAClC;IACD,OAAO,OAAO,CAAC;CAClB;AAED,kBAAkB,OAAoB,EAAE,IAAW;;IAE/C,KAAK,MAAM,QAAQ,IAAI,IAAI,EAAE;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAEjC,IAAI,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YAC3B,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YAC/C,SAAS;SACZ;;;QAID,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;;YAE9C,MAAM,WAAW,GAAGA,OAAS,CAAC;gBAC1B,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;aACzC,CAAC,CAAC;;YAGH,IAAI,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE;gBACjCC,YAAc,CAAC,WAAW,CAAC,cAAc,EAAE;oBACvC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;iBACzC,CAAC,CAAC;aACN;YACD,SAAS;SACZ;;QAED,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;KACzC;CACJ;AAED,iBAAiB,OAAoB,EAAE,IAAY,EAAE,KAAU;IAC3D,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IAC3B,QAAO,IAAI;QACP,KAAK,OAAO,CAAC;QACb,KAAK,WAAW;YACZ,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC7B,MAAK;QACL,KAAK,OAAO;YACR,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAC7B,MAAM;QACN;YACI,IAAI,IAAI,IAAI,OAAO,EAAE;gBACjB,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;aACzB;iBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;gBACxB,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;aACjC;iBAAM,IAAI,KAAK,KAAK,IAAI,EAAE;;gBAEvB,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aAClC;iBAAM;gBACH,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACrC;KACR;CACJ;AAED,kBAAkB,OAAoB,EAAE,SAAyB;IAC7D,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;QACrB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;KACjC;SAAM;QACH,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;YACzB,IAAI,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,KAAK,EAAE;gBACP,QAAQ,IAAI,CAAC,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,IAAK,GAAG,CAAC;aAClD;SACJ;QACD,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;KAChC;CACJ;AAED,kBAAkB,OAAoB,EAAE,KAAqB,EAAE,KAAM;IACjE,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACxC;SAAM;QACH,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;YACrB,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;SACnC;KACJ;CACJ;AAED,qBAAqB,OAAoB,EAAE,QAAkB;IACzD,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACtC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACrC;KACJ;SAAM;QACH,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;KAClC;CACJ;AAED,qBAAqB,OAAoB,EAAE,KAAY;IACnD,IAAI,CAAC,KAAK;QAAE,OAAO;IACnB,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;QACnB,IAAI,aAAmC,CAAC;QACxC,MAAM,WAAW,GAAGD,OAAS,CAAC;YAC1B,aAAa,GAAG,KAAK,EAAE,CAAC;SAC3B,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC/F,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAE/B,IAAI,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE;;YAEjCC,YAAc,CAAC,WAAW,CAAC,cAAc,EAAE;gBACvC,MAAM,YAAY,GAAG,SAAS,CAAC;gBAC/B,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;gBAC3F,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;aACjD,CAAC,CAAC;SACN;KACJ;SAAM,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;QACtB,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC9B;SAAM;QACH,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;KACvD;CACJ;AAED;IAMI,YAAY,eAA4B,EAAE,SAA+B,EAAE,cAAmC,EAAE,GAAY;QACxH,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;QAErC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAoB,CAAC;QAClD,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAErD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACvB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;KACJ;IAED,aAAa,CAAE,EAAU,EAAE,IAAW;QAClC,QAAO,EAAE;YACL,KAAK,KAAK;gBACN,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;gBACjE,MAAM;YACV,KAAK,MAAM,EAAE;gBACT,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC7E,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxC,MAAM;aACT;YACD,KAAK,SAAS;gBAAE;oBACZ,MAAM,IAAI,GAAG,IAAI,gBAAgB,EAAE,CAAC;oBACpC,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE;wBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;qBACtF;oBACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACvC,MAAM;iBACT;gBAAA,CAAC;YACF,KAAK,QAAQ;gBACT,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;gBACnD,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxE,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;gBAChF,MAAM,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC;;;gBAG7C,MAAM,QAAQ,GAAG,EAAE,CAAC;gBACpB,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;oBAC3C,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChC;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBACtC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjD;gBAED,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;oBAC9D,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;iBACrE;gBACD,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;gBAClE,MAAM;YACV,KAAK,MAAM,EAAE;gBACT,MAAM,IAAI,GAAG,IAAI,gBAAgB,EAAE,CAAC;gBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9D,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBAC1B;gBACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACvC,MAAM;aACT;YACD,KAAK,SAAS,EAAE;gBACZ,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;gBAC1E,MAAM;aACT;YACD,KAAK,SAAS,EAAE;gBACZ,MAAM,OAAO,GAAG,IAAI,CAAC;gBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBACrC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;gBACD,MAAM;aACT;SACJ;KACJ;IAED,cAAc,CAAC,MAAkB,EAAE,UAAkB;QACjD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,MAAM,IAAI,GAAG,IAAI,gBAAgB,EAAE,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACpC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;gBAC9D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;aAC/B;YACD,OAAO,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;KACpD;IAED,aAAa,CAAC,KAAK,EAAE,KAAa;QAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAC1C,OAAO,SAAS,CAAC;KACpB;CACJ;AAED,qBAA4B,OAAe,EAAE,KAAY,EAAE,MAA4B,EAAE,WAAgC,EAAE,GAAY;IACnI,MAAM,eAAe,GAAGC,GAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACzC,MAAc,CAAC,YAAY,GAAG,IAAI,iBAAiB,CAAC,eAAe,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;IAChG,OAAQ,eAAe,CAAC;CAC3B;AAED,AAEC;AAED,AAEC;AAED,oBAA2B,aAAqB,EAAE,OAA6B;IAC3E,OAAO,UAAU,KAAK;QAClB,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;KAC/C,CAAA;CACJ;;;;ICnQG,YAAY,KAAW;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KAC5B;IAED,IAAI,CAAC,GAAG,IAAI;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvC,OAAO,QAAQ,CAAC;KACnB;IAED,GAAG,CAAC,GAAG,IAAI;QACP,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtC,OAAO,QAAQ,CAAC;KACnB;IAED,OAAO,CAAC,GAAG,IAAI;QACX,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1C,OAAO,QAAQ,CAAC;KACnB;IAED,KAAK,CAAC,GAAG,IAAI;QACT,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACxC,OAAO,QAAQ,CAAC;KACnB;IAED,MAAM,CAAC,GAAG,IAAI;QACV,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACzC,OAAO,QAAQ,CAAC;KACnB;IAED,IAAI,CAAC,GAAG,IAAI;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvC,OAAO,QAAQ,CAAC;KACnB;IAED,OAAO,CAAC,GAAG,IAAI;QACX,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1C,OAAO,QAAQ,CAAC;KACnB;IAED,MAAM,CAAC,KAAQ;QACX,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACzB;IAED,YAAY,CAAC,aAAwB;QACjC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,MAAM,CAAC;QACX,IAAI;YACA,MAAM,GAAG,aAAa,EAAE,CAAC;SAC5B;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,MAAM,CAAC,CAAC;SACX;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,MAAM,CAAC;KACjB;IAED,WAAW,CAAC,QAAuB;QAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KAC9C;IAED,cAAc,CAAC,QAAuB;QAClC,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KAC3C;IAED,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI;QAC/B,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;SACxC;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;SAClD;KACJ;IAED,IAAI,CAAC,EAAU,EAAE,IAAW,EAAE,aAAmB;QAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAC5C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;SAC9C;KACJ;CACJ;AAGD;IAII,YAAY,GAAuB,EAAE,SAA6B;QAC9D,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC;QAEnC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACpD;IAED,WAAW,CAAC,YAAgC,IAAI,EAAE,QAAiB,KAAK;QACpE,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC9B;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;YACvC,IAAI,KAAK,EAAE;;gBAEP,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC7D,IAAI,cAAc,CAAC,MAAM,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;iBACzC;gBACD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;aAChC;;YAGD,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE;gBAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBAC1B,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;wBACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,QAAQ,EAAE;4BAC/C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;yBAClD;qBACJ;yBAAM;wBACH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;qBAClD;oBACD,EAAE,WAAW,CAAC;iBACjB;qBAAM;oBACH,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;wBACpC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,QAAQ,EAAE;4BAC/C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;yBACxC;qBACJ;iBACJ;aACJ;;YAGD,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBACpC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aACrC;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;SAChC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;KAClB;IAGO,UAAU,CAAC,EAAU,EAAE,IAAW,EAAE,aAAmB;QAC3D,QAAQ,EAAE;YACN,KAAK,KAAK;gBACN,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,aAAa,EAAE;oBACzF,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;iBACvB;gBACD,MAAM;YACV,KAAK,MAAM,EAAE;gBACT,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACrD,IAAI,gBAAgB,CAAC,MAAM,EAAE;oBACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC;iBAC3C;gBACD,MAAM;aACT;YACD,KAAK,SAAS;gBAAE;oBACZ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;wBACtB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;qBAC3B;oBACD,MAAM;iBACT;gBAAA,CAAC;YACF,KAAK,QAAQ;gBACT,MAAM,gBAAgB,GAAG,aAAa,CAAC;gBAEvC,MAAM,wBAAwB,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACzE,IAAI,qBAAqB,CAAC;gBAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjB,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpC,qBAAqB,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAChE;gBAED,MAAM,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;oBAC9B,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC7F,IAAI,CAAC,CAAC,CAAC,CAAC;;gBAEZ,IAAI,mBAAmB,GAAG,CAAC,CAAC;gBAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,EAAE,CAAC,EAAE;oBACrC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBACnC,EAAE,mBAAmB,CAAC;qBACzB;iBACJ;gBAED,IAAI,wBAAwB,IAAI,wBAAwB,CAAC,MAAM,EAAE;oBAC7D,IAAI,qBAAqB,IAAI,qBAAqB,CAAC,MAAM,EAAE;wBACvD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,MAAM,EAAE,GAAG,qBAAqB,CAAC,CAAC;qBACxG;yBAAM;wBACH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,MAAM,CAAC,CAAC;qBAC9E;iBACJ;qBAAM,IAAI,qBAAqB,IAAI,qBAAqB,CAAC,MAAM,EAAE;oBAC9D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,EAAE,GAAG,qBAAqB,CAAC,CAAC;iBAC1E;gBACD,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,aAAa,EAAE;oBAClE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;iBACzB;gBACD,MAAM;YACV,KAAK,MAAM,EAAE;gBACT,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;oBACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACxB;gBACD,MAAM;aACT;YACD,KAAK,SAAS,EAAE;gBACZ,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACxD,IAAI,mBAAmB,CAAC,MAAM,EAAE;oBAC5B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,mBAAmB,CAAC,CAAC;iBACjD;gBACD,MAAM;aACT;YACD,KAAK,SAAS,EAAE;gBACZ,MAAM,OAAO,GAAG,IAAI,CAAC;gBACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBACrC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3C;gBACD,MAAM;aACT;SACJ;KACJ;CACJ;;;;ACpPD,MAAM,CAAC,GAAGC,GAAI,CAAC;AAMf,MAAM,QAAQ,GAAe,EAAE,CAAC;AAEhC,gBAAgB,MAAM;IAClB,OAAQ,MAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;CACzC;AAED,sBAAsB,QAAgB;IAClC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC;CAC/C;AAED,qBAAqB,QAAe;IAChC,OAAO,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;CACxC;AAED,uBAAuB,QAAe;IAClC,OAAO,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;CAC1C;AAED,0BAA0B,OAAe;IACrC,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;IAEhC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEnB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAGlC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QACd,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YACzB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;SAChC;QACD,OAAO,CAAC,CAAC;KACZ,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC3B;AAED,2BAA2B,CAAW;IAClC,OAAO,MAAM,CAAC,iBAAiB,GAAG,gBAAgB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC;CAC/E;AAED,uBAAuB,KAAa,EAAE,gBAA0B;IAC5D,OAAO;QACH,KAAK;QACL,gBAAgB;KACnB,CAAC;CACL;AAED,oBAAoB,KAAa,EAAE,gBAA0B;IACzD,MAAM,EAAE,GAAG,aAAa,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IAClD,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClB,OAAO,EAAE,CAAC;CACb;AAED,AAiBA,4BAA4B,QAAmB;IAC3C,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,OAAO;QACxD,IAAI,SAAS,CAAC;QACd,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;YAClC,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC;YAC9C,SAAS,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAC,CAAC;YAC1C,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,OAAO,CAAC,gBAAgB,EAAE,CAAC;SAC9D,CAAC,CAAC;QACH,SAAS,CAAC,SAAS,GAAG,iBAAiB,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAClE,OAAO,EAAE,CAAC;KACb,CAAC,CAAC,CAAC;CACP;;;AAKD;IACI,MAAM,KAAK,GAAGC,WAAc,CAAC,EAAE,CAAC,CAAC;;IAGjC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;;IAGrB,KAAK,CAAC,EAAE,CAAC,CAAC;;IAGV,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;;IAGrB,MAAM,aAAa,GAAGA,WAAc,CAAC,EAAE,EAAE,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;;IAE7D,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;;IAE7B,aAAa,CAAC,EAAE,CAAC,CAAC;;IAElB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;CAChC;AAED,AAMA,UAAU,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;AAE1C;IACI,MAAM,KAAK,GAAGA,WAAc,CAAC,EAAE,CAAC,CAAC;;IAEjC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;;IAGrBC,YAAe,CAAC,KAAK,EAAE,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;;IAG3C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;CACxB;AACD,UAAU,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;AAGjD;IACI,MAAM,KAAK,GAAGD,WAAc,CAAC,EAAE,CAAC,CAAC;IAEjC,MAAM,aAAa,GAAGE,WAAc,CAAC,KAAK,EAAE,KAAK;QAC7C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;KAC7C,CAAC,CAAC;;IAGH,KAAK,CAAC,EAAE,CAAC,CAAC;IAEV,aAAa,EAAE,CAAC;;IAEhB,KAAK,CAAC,EAAE,CAAC,CAAC;CACb;AACD,UAAU,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;AAEhD;IACI,MAAM,KAAK,GAAGF,WAAc,CAAC,EAAE,CAAC,CAAC;;IAGjC,MAAM,WAAW,GAAGG,GAAM,CAAC,KAAK,EAAE,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;;IAGtD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;;IAGrB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IAE3B,KAAK,CAAC,EAAE,CAAC,CAAC;;IAGV,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;CAC9B;AACD,UAAU,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;AAEtC;IACI,MAAM,SAAS,GAAGH,WAAc,CAAC,QAAQ,CAAC,CAAC;IAC3C,MAAM,QAAQ,GAAGA,WAAc,CAAC,OAAO,CAAC,CAAC;IACzC,MAAM,QAAQ,GAAGI,aAAgB,CAAC;QAC9B,OAAO,SAAS,EAAE,GAAG,GAAG,GAAG,QAAQ,EAAE,CAAC;KACzC,CAAC,CAAC;;IAGH,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IAExB,QAAQ,CAAC,MAAM,CAAC,CAAC;;IAGjB,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;CAC3B;AACD,UAAU,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;;;AAK9C;IACI,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAC,EAAE,QAAQ,CAAC,CAAA;CAC1D;AACD,UAAU,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC;AAE9C;IACI,OAAO,CAAC,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,iBAAiB,EAAC,EAAE;QACxC,yBAAyB;QACzB,CAAC,CAAC,OAAO,EAAE,EAAC,WAAW,EAAE,iBAAiB,EAAC,CAAC;QAC5C,CAAC,CAAC,QAAQ,EAAE,EAAE,EAAE,cAAc,CAAC;KAClC,CAAC,CAAA;CACL;AACD,UAAU,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAE3C;IACI,MAAM,MAAM,GAAG;QACX,EAAC,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,IAAI,EAAC;QACvC,EAAE,IAAI,EAAE,oBAAoB,EAAE,MAAM,EAAE,IAAI,EAAE;KACtC,CAAC;;;IAIX,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAC,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK;QACzD,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE;gBACL,KAAK,EAAE,IAAI;gBACX,YAAY,EAAE,KAAK,CAAC,IAAI;gBACxB,cAAc,EAAE,KAAK,CAAC,MAAM;aAC/B,EAAE,EACf,KAAK,CAAC,IAAI,CAAC,CAAA;KAClB,CAAC,CAAC,CAAC;CACP;AACD,UAAU,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;AAEzC;;IAEI,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE;QAChB,CAAC,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,qDAAqD,EAAC,EAAE,eAAe,CAAC;QACzF,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,iBAAiB,CAAC;KACvG,CAAC,CAAC;CACN;AACD,UAAU,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;AAExC;;IAEI,OAAO,CAAC,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,iBAAiB,EAAC,EAAE;;QAExC,CAAC,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;;QAEhF,CAAC,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;;QAE9D,CAAC,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;KAClE,CAAC,CAAC;CACN;AACD,UAAU,CAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC;AAEhD;IACI,IAAI,KAAK,EAAE,MAAM,EAAE,UAAU,GAAG,SAAS,CAAC;IAC1C,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE;QAC1C,KAAK,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,kBAAkB,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;;QAEjF,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE;YACjB,OAAO,EAAE;;gBAEL,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACrC;YACD,YAAY,EAAE;gBACV,MAAM,CAAC,SAAS,GAAG,eAAe,CAAC;aACtC;YACD,YAAY,EAAE;gBACV,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC;aACjC;SACJ,EACD,UAAU,CAAC;KACd,CAAC,CAAC;CACN;AACD,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;;AAK/B;;IAEI,MAAM,QAAQ,GAAGJ,WAAc,CAAC,KAAK,CAAC,CAAC;IACvC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE;QAC1C,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC;;QAE/D,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,eAAe,CAAC;;QAE1D,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,QAAQ,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAE,EAAE,eAAe,CAAC;KACzE,CAAC,CAAC;CACN;AACD,UAAU,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,CAAC;;AAG5D;;IAEI,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;IACzD,MAAM,WAAW,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC,CAAC;IAChD,MAAM,MAAM,GAAGA,WAAc,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7C,MAAM,MAAM,GAAGA,WAAc,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7C,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE;QAC1C,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE;gBACnB,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;gBACtB,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;aACzB,EAAE,EAAE,cAAc,CAAC;QACpB,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,MAAM,oBAAoB,GAAG,MAAM,EAAE,EAAE,CAAC;QAClF,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,eAAe,EAAE,MAAM,EAAE,EAAE,CAAC;KAC3E,CAAC,CAAC;CACN;AACD,UAAU,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,CAAC;AAE5D;;IAEI,MAAM,MAAM,GAAGA,WAAc,CAAC,KAAK,CAAC,CAAC;IACrC,MAAM,aAAa,GAAGG,GAAM,CAAC,MAAM,EAAE,KAAK,IAAI,KAAK,GAAG,kBAAkB,GAAG,kBAAkB,CAAC,CAAC;IAC/F,MAAM,aAAa,GAAGA,GAAM,CAAC,MAAM,EAAE,KAAK,IAAI,KAAK,GAAG,kBAAkB,GAAG,iBAAiB,CAAC,CAAC;IAC9F,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,EAAE;QAC1C,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC;QAC3D,CAAC,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;QAC5D,CAAC,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;KAC/D,CAAC,CAAC;CACN;AACD,UAAU,CAAC,6BAA6B,EAAE,oBAAoB,CAAC,CAAC;AAEhE;IACI,MAAM,SAAS,GAAGH,WAAc,CAAC,IAAI,CAAC,CAAC;;IAEvC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE;QAChB,CAAC,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAEK,UAAa,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC;QAClG,CAAC,CAAC,QAAQ,EAAE,EAAC,KAAK,EAAE,MAAM,SAAS,EAAE,GAAG,iBAAiB,GAAG,mBAAmB,EAAC,EAAE,WAAW,CAAC;KACjG,CAAC,CAAC;CACN;AACD,UAAU,CAAC,2BAA2B,EAAE,uBAAuB,CAAC,CAAC;AAEjE;IACI,MAAM,KAAK,GAAGL,WAAc,CAAC,0BAA0B,CAAC,CAAC;IACzD,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE;;QAEhB,CAAC,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAEK,UAAa,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC;;QAEpE,CAAC,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC;KACxB,CAAC,CAAC;CACN;AACD,UAAU,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;AAErD;IACI,MAAM,OAAO,GAAGL,WAAc,CAAC,CAAC,CAAC,CAAC;IAClC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE;QAChB,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC;QACnE,CAAC,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,eAAe,EAAC,EAAE,OAAO,CAAC;KAChD,CAAC,CAAC;CACN;AACD,UAAU,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AAE3D;IACI,MAAM,MAAM,GAAG,IAAIM,eAAkB,EAAO,CAAC;IAC7C,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,MAAM,CAAC,IAAI,CAACN,WAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrC,MAAM,CAAC,IAAI,CAACA,WAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrC,MAAM,CAAC,IAAI,CAACA,WAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrC,MAAM,CAAC,IAAI,CAACA,WAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE;QAChB,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC,IAAI,CAACA,WAAc,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC;QAC3E,CAAC,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,eAAe,CAAC;;QAE5FO,WAAc,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,QAAqB,EAAE,KAAU,EAAE,KAAa;YAC9E,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAA;SAC5B,CAAC;KACL,CAAC,CAAC;CACN;AACD,UAAU,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;;;AAKzC,MAAM,KAAK,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,UAAU,IAAI,cAAc,EAAE,cAAc;IACpF,aAAa,EAAE,iBAAiB,EAAE,eAAe;IACjD,cAAc,EAAE,iBAAiB,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc;IAChF,aAAa,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe;IAC5F,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,WAAW,EAAE,cAAc;IAC/E,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa;IACvF,YAAY,EAAE,eAAe,EAAE,aAAa,EAAE,eAAe;IAC7D,cAAc,EAAE,aAAa,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,eAAe;IACpF,YAAY,EAAE,YAAY,EAAE,iBAAiB,EAAE,iBAAiB;CACnE,CAAC;AACF,MAAM,UAAU,GAAG,EAAE,CAAC;AACtB,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,KAAK,CAAC,OAAO,CAAC,IAAI;IACd,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5B,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;CAC5B,CAAC,CAAC;AAEH;IACI,OAAO,aAAa,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;CACrE;AAED;IACI,MAAM,QAAQ,GAAG,IAAID,eAAkB,EAAU,CAAC;IAElD,MAAM,GAAG,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW;QACnD,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KACtC,CAAC,CAAC;;IAGH,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAGjB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;;IAG1B,GAAG,EAAE,CAAC;;IAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACpB;AACD,UAAU,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;AAElD;IACI,MAAM,QAAQ,GAAG,IAAIA,eAAkB,EAAU,CAAC;IAElD,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW;QACvC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;KACtC,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAE1B,OAAO,QAAQ,CAAC,MAAM,CAAC;KAC1B,CAAC,CAAC;;;;CAMN;AACD,UAAU,CAAC,gCAAgC,EAAE,6BAA6B,CAAC,CAAC;AAE5E;IACI,MAAM,MAAM,GAAG,IAAIA,eAAkB,EAAU,CAAC;IAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC;QAAE,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;IAC3D,MAAM,KAAK,GAAGN,WAAc,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,MAAM,GAAG,IAAIQ,MAAS,CAAC,MAAM,EAAE,CAAC,KAAa;QAC/C,OAAO,KAAK,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;KACvD,CAAC,CAAC;IACH,MAAM,aAAa,GAAGL,GAAM,CAAC,KAAK,EAAE,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IAEhE,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE;QAChB,CAAC,CAAC,OAAO,EAAE,EAAE,OAAO,EAAEE,UAAa,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC;;QAEtDE,WAAc,CAAC,IAAI,EAAE,EAAC,KAAK,EAAE,8BAA8B,EAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,QAAqB,EAAE,KAAU,EAAE,KAAa;YAC5H,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,CAAC,CAAA;SAC5B,CAAC;KACL,CAAC,CAAC;CACN;AACD,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;;AAK/B;IACI,MAAM,QAAQ,GAAGP,WAAc,CAAC,EAAE,CAAC,CAAC;;IAGpC,MAAM,KAAK,GAAG,IAAIM,eAAkB,EAAE,CAAC;IAEvC;QACI,IAAI,QAAQ,EAAE,EAAE;;YAEZ,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACnC,QAAQ,CAAC,EAAE,CAAC,CAAC;SAChB;KACJ;IAAA,AAAC;IAEF,oBAAoB,KAAa,EAAE,IAAI,GAAG,KAAK;QAC3C,OAAO;YACH,KAAK;YACL,IAAI,EAAEN,WAAc,CAAC,IAAI,CAAC;SAC7B,CAAC;KACL;;IAGD,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IACtC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9C,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;;IAG3C,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE;QAClC,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE;YAC1B,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,cAAc,CAAC;YAC3B,CAAC,CAAC,OAAO,EAAE;gBACP,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa;;gBAEzD,OAAO,EAAEK,UAAa,CAAC,OAAO,EAAE,QAAQ,CAAC;aAC5C,CAAC;YACF,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,KAAK,CAAC;SAC1D,CAAC;;QAEFE,WAAc,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,QAAqB,EAAE,IAAS,EAAE,KAAa;YAC5E,OAAO,CAAC,CAAC,IAAI,EAAE;;gBAEX,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE;gBAC7B,OAAO,EAAE,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;aACzC,EAAE;gBACK,IAAI,CAAC,KAAK;;gBAEV,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC;aAC3E,CAAC,CAAC;SACV,CAAC;KACL,CAAC,CAAC;CACN;AACD,UAAU,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;AAE1C,MAAM,IAAI,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;;;;;"}