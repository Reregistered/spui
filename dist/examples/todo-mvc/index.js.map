{"version":3,"file":"index.js","sources":["../../../spui/utils.ts","../../../spui/stream.ts","../../../spui/dom.ts","../../../spui/observable-array.ts","../../../examples/todo-mvc/index.ts"],"sourcesContent":["export interface StringKeyMap<T> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport function isFunction(obj): obj is Function {\r\n    return typeof obj === 'function';\r\n}\r\n\r\nexport function isNode(obj): obj is Node {\r\n    return obj.nodeType;\r\n}\r\n\r\nexport function isObject(obj): obj is Object {\r\n    return typeof obj === 'object';\r\n}\r\n\r\nexport function isString(obj): obj is string {\r\n    return typeof obj === 'string'; \r\n}\r\n\r\nexport function expandValue(value): any {\r\n    return isFunction(value) ? value() : value; \r\n}\r\n\r\nexport function remove(array: Array<any>, value) {\r\n    const i = array.indexOf(value);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n    return array;\r\n}","import {isFunction, remove} from './utils';\r\n\r\ntype Functor = () => any;\r\ntype Transform = (value) => any;\r\nexport interface GetterSetter {\r\n    (value?): any;\r\n}\r\nexport interface Stream extends GetterSetter {\r\n    _backingValue: any;\r\n    _listeners?: Array<Transform>;\r\n    _transform?: Transform;\r\n}\r\nexport interface Computation {\r\n    computedStream: Stream;\r\n    dependencies: Stream[];\r\n}\r\n\r\nlet runningComputations: Array<Computation> = [];\r\n\r\nfunction setValue(stream, value) {\r\n    stream._backingValue = stream._transform ? stream._transform(value) : value;\r\n    if (stream._listeners.length) {\r\n        const dependencies = stream._listeners.slice();\r\n        for (let i = 0; i < dependencies.length; ++i) {\r\n            dependencies[i](stream._backingValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport function createValueStream(initialValue?, transform?: Transform) : Stream {\r\n    let stream = function (value?) {\r\n        if (arguments.length) {\r\n            setValue(stream, value);\r\n        } else {\r\n            // Check to create a new computation dependency:\r\n            if (runningComputations.length) {\r\n                const computation = runningComputations[runningComputations.length - 1];\r\n                addListener(stream, computation.computedStream);\r\n                computation.dependencies.push(stream);\r\n            }\r\n        }\r\n        \r\n        return stream._backingValue;\r\n    } as Stream;\r\n\r\n    stream._listeners = [];\r\n    if (transform) {\r\n        stream._transform = transform;\r\n    }\r\n    if (initialValue !== undefined) {\r\n        setValue(stream, initialValue);\r\n    }\r\n\r\n    return stream;\r\n}\r\n\r\nexport function addListener(stream: Stream, listener: Transform) : Functor {\r\n    if (stream._listeners.indexOf(listener) === -1) {\r\n        stream._listeners.push(listener);\r\n    }\r\n    return () => removeListener(stream, listener);\r\n}\r\n\r\nexport function removeListener(valueStream: Stream, listener: Transform) : Stream {\r\n    remove(valueStream._listeners, listener);\r\n    return valueStream;\r\n}\r\n\r\nexport function addTransform(valueStream: Stream, transform: Transform) {\r\n    if (valueStream._transform) {\r\n        const firstTransform = valueStream._transform;\r\n        valueStream._transform = value => transform(firstTransform(value));\r\n    } else {\r\n        valueStream._transform = transform;\r\n    }\r\n}\r\n\r\nexport function map(valueStream: Stream, transform: Transform) : Stream {\r\n    const computedStream = createValueStream(valueStream(), transform);\r\n    addListener(valueStream, computedStream);\r\n    return computedStream;\r\n}\r\n\r\nfunction createComputation() : Computation {\r\n    return {\r\n        computedStream: createValueStream(),\r\n        dependencies: []\r\n    };\r\n}\r\n\r\nexport function computeStream(functor: Functor, transform?: Transform) : Computation {\r\n    const computation = createComputation();\r\n    computation.computedStream(compute());\r\n    addTransform(computation.computedStream, compute);\r\n    if (transform) {\r\n        addTransform(computation.computedStream, transform);\r\n    }    \r\n    return computation;\r\n\r\n    function compute() {\r\n        runningComputations.push(computation);\r\n        let result, error;\r\n        try {\r\n            result = functor();\r\n        }\r\n        catch (e) {\r\n            error = e;\r\n        }\r\n        runningComputations.pop();\r\n        if (error) throw error;\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function createEventStream(source: EventTarget | string, name: string, useCapture?) {\r\n    const eventStream = createValueStream();\r\n    const element = source instanceof EventTarget ? source : document.querySelector(source);\r\n    element.addEventListener(name, eventStream, !!useCapture);\r\n    return eventStream;\r\n}","import { isNode, isFunction, isString, isObject, expandValue, StringKeyMap} from './utils';\r\nimport * as s from './stream';\r\nimport {ObservableArray} from './observable-array';\r\n\r\ntype AttrGenerator = (HTMLElement) => Object;\r\ntype ChildGenerator = (HTMLElement) => HTMLElement | string;\r\ntype Child = string | HTMLElement | ChildGenerator;\r\ntype Children = Array<any> | Child;\r\n\r\nexport function h(tagName: string, attrs?: AttrGenerator | Object, children?: Children) {\r\n    const element = document.createElement(tagName);\r\n    if (attrs) {\r\n        setAttrs(element, attrs);\r\n    }\r\n\r\n    if (children) {\r\n        setChildren(element, children);\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction setAttrs(element: HTMLElement, attr: StringKeyMap<any>) {\r\n    // For each attr, setup a computation. When that computation is triggered, we patch this argument:\r\n    for (const attrName in attr) {\r\n        const attrValue = attr[attrName];\r\n        // For event avoid listening for changes.\r\n        if (attrName.startsWith('on')) {\r\n            const eventName = attrName.slice(2);\r\n            element.addEventListener(eventName, attrValue);\r\n            continue;\r\n        }\r\n\r\n        // If attr value is an object (for classes and styles we might have to setup a computation)\r\n        if (isFunction(attrValue) || isObject(attrValue)) {\r\n            // For all attributes resulting from a computation setup auto update:\r\n            const computation = s.computeStream(() => {\r\n                setAttr(element, attrName, attrValue);\r\n            });\r\n\r\n            // Check if the attrValue function has actually registered a dependency:\r\n            if (computation.dependencies.length) {\r\n                s.addTransform(computation.computedStream, () => {\r\n                    setAttr(element, attrName, attrValue);\r\n                });\r\n            }\r\n            continue;\r\n        }\r\n        // Handle static attributes:\r\n        setAttr(element, attrName, attrValue);\r\n    }\r\n}\r\n\r\nfunction setAttr(element: HTMLElement, attr: string, value: any) {\r\n    value = expandValue(value);\r\n    switch(attr) {\r\n        case 'class':\r\n        case 'className':\r\n            setClass(element, value);\r\n        break\r\n        case 'style':\r\n            setStyle(element, value);\r\n        break;\r\n        case 'value':\r\n            // value is handled differently than attributes. the value attributes only indicates the \"initial\" value. \r\n            // You need to use \"value\" property to actually modify the node.\r\n            (element as any).value = value;\r\n        break;\r\n        default: \r\n            if (value === false) {\r\n                element.removeAttribute(attr);\r\n            } else {\r\n                // If value is a boolean, set it to \"\" to only enable it in DOM.\r\n                element.setAttribute(attr, value === true ? \"\" : value);\r\n            }\r\n    }\r\n}\r\n\r\nfunction setClass(element: HTMLElement, className: string | Object) {\r\n    if (isString(className)) {\r\n        element.className = className;\r\n    } else {\r\n        let newClass = '';\r\n        for (const key in className) {\r\n            let value = className[key];\r\n            value = expandValue(value);\r\n            if (value) {\r\n                newClass += (newClass == '' ? '' : ' ' ) + key;\r\n            }\r\n        }\r\n        element.className = newClass;\r\n    }\r\n}\r\n\r\nfunction setStyle(element: HTMLElement, style: Object | string, value?) {\r\n    if (isString(style)) {\r\n        element.setAttribute('style', style);\r\n    } else {\r\n        for (const key in style) {\r\n            const styleValue = expandValue(style[key]);\r\n            element.style[key] = styleValue;\r\n        }\r\n    }\r\n}\r\n\r\nfunction setChildren(element: HTMLElement, children: Children) {\r\n    if (Array.isArray(children)) {\r\n        for (let i = 0; i < children.length; ++i) {\r\n            appendChild(element, children[i]);\r\n        }\r\n    } else {\r\n        appendChild(element, children);\r\n    }\r\n}\r\n\r\nfunction appendChild(element: HTMLElement, child: Child) {\r\n    if (isFunction(child)) {\r\n        let resolvedChild: HTMLElement | string;\r\n        const computation = s.computeStream(() => {\r\n            resolvedChild = child(element);\r\n        });\r\n\r\n        let childNode = isString(resolvedChild) ? document.createTextNode(resolvedChild) : resolvedChild;\r\n        element.appendChild(childNode);\r\n\r\n        if (computation.dependencies.length) {\r\n            // Auto update in case children is a stream\r\n            s.addTransform(computation.computedStream, () => {\r\n                const oldChildNode = childNode;\r\n                childNode = isString(resolvedChild) ? document.createTextNode(resolvedChild) : resolvedChild;\r\n                element.replaceChild(childNode, oldChildNode);\r\n            });\r\n        }\r\n    } else if (isNode(child)) {\r\n        element.appendChild(child);\r\n    } else {\r\n        element.appendChild(document.createTextNode(child));\r\n    }\r\n}\r\n\r\ntype NodeCreator = (listRootNode: HTMLElement, model: any, indeX: number) => HTMLElement;\r\nexport class SyncNodeList {\r\n    models: ObservableArray<any>;\r\n    listRootNode: HTMLElement;\r\n    nodeCreator: NodeCreator;\r\n    key: string;\r\n    modelToNode: Map<any, HTMLElement>;\r\n    updateFunc: (HTMLElement) => void;\r\n    constructor(listRootNode: HTMLElement, models: ObservableArray<any>, nodeCreator: NodeCreator, key?: string) {\r\n        this.listRootNode = listRootNode;\r\n        this.models = models;\r\n        this.nodeCreator = nodeCreator;\r\n        this.key = key;\r\n        this.modelToNode = new Map<any, HTMLElement>();\r\n        models.addListener(this.onModelChange.bind(this));\r\n\r\n        if (this.models.length) {\r\n            const nodes = this.createNodes(this.models, 0);\r\n            this.listRootNode.appendChild(nodes);\r\n        }\r\n    }\r\n\r\n    onModelChange (op: string, args: any[]) {\r\n        switch(op) {\r\n            case 'pop':\r\n                this.listRootNode.removeChild(this.listRootNode.lastChild);\r\n                break;\r\n            case 'push': {\r\n                const nodes = this.createNodes(args, this.models.length - args.length);\r\n                this.listRootNode.appendChild(nodes);\r\n                break;\r\n            }\r\n            case 'reverse': {\r\n                const frag = new DocumentFragment();\r\n                while (this.listRootNode.lastChild) {\r\n                    frag.appendChild(this.listRootNode.removeChild(this.listRootNode.lastChild));\r\n                }\r\n                this.listRootNode.appendChild(frag);\r\n                break;\r\n            };\r\n            case 'splice':\r\n                const childNodes = this.listRootNode.childNodes;\r\n                const spliceStart = args[0] < 0 ? childNodes.length + args[0] : args[0];\r\n                const deleteCount = args.length > 1 ? args[1] : childNodes.length - spliceStart;\r\n                const deleteStop = spliceStart + deleteCount;\r\n                for (let i = spliceStart; i < deleteStop && childNodes[spliceStart]; i++) {\r\n                    this.listRootNode.removeChild(childNodes[spliceStart]);\r\n                }\r\n\r\n                if (args.length > 2) {\r\n                    const nodes = this.createNodes(args.slice(2), spliceStart);\r\n                    this.listRootNode.insertBefore(nodes, childNodes[spliceStart]);\r\n                }\r\n                break;\r\n            case 'shift':\r\n                this.listRootNode.removeChild(this.listRootNode.firstChild);\r\n                break;\r\n            case 'sort': {\r\n                const frag = new DocumentFragment();\r\n                for (let i = 0; i < this.models.length; ++i) {\r\n                    const node = this.modelToNode.get(this.models[i]);\r\n                    this.listRootNode.removeChild(node);\r\n                    frag.appendChild(node);\r\n                }\r\n                this.listRootNode.appendChild(frag);\r\n                break;\r\n            }\r\n            case 'unshift': {\r\n                const nodes = this.createNodes(args, 0);\r\n                this.listRootNode.insertBefore(nodes, this.listRootNode.firstChild);\r\n                break;\r\n            }\r\n            case 'changes': {\r\n                const changes = args;\r\n                for (let i = 0; i < changes.length; ++i) {\r\n                    this.onModelChange(changes[i][0], changes[i][1]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    createNodes(models: Array<any>, startIndex: number) : DocumentFragment | HTMLElement {\r\n        if (models.length > 1) {\r\n            const frag = new DocumentFragment();\r\n            for (let i = 0; i < models.length; ++i) {\r\n                const childNode = this.createNode(models[i], startIndex++);\r\n                frag.appendChild(childNode);\r\n            }\r\n            return frag;\r\n        }\r\n\r\n        return this.createNode(models[0], startIndex);\r\n    }\r\n\r\n    createNode(model, index: number) : HTMLElement {\r\n        const childNode = this.nodeCreator(this.listRootNode, model, index);\r\n        this.modelToNode.set(model, childNode);\r\n        return childNode;\r\n    }\r\n}\r\n\r\nexport function nodeList(tagName: string, attrs: AttrGenerator | Object = null, models: ObservableArray<any>, nodeCreator: NodeCreator, key?: string) {\r\n    const listRootNode = h(tagName, attrs);\r\n    (parent as any)._nodeList = new SyncNodeList(listRootNode, models, nodeCreator, key);\r\n    return  listRootNode;\r\n}\r\n\r\nexport function getNodeList(nodeListElement: HTMLElement) : SyncNodeList {\r\n    return (parent as any)._nodeList;\r\n}\r\n\r\nexport function eventTarget(eventAttrName: string, stream: s.Stream) {\r\n    return function (event) {\r\n        return stream(event.target[eventAttrName]);\r\n    }\r\n}\r\n","import {remove} from './utils';\r\nexport type ArrayListener = (op: string, args: any[]) => void;\r\nexport class ObservableArray<T> extends Array<T> {\r\n    listeners: ArrayListener[];\r\n    changes: any[];\r\n    constructor() {\r\n        super();\r\n        this.listeners = [];\r\n        this.changes = null;\r\n    }\r\n\r\n    applyChanges(changeFunctor: () => any) {\r\n        this.changes = [];\r\n        let result;\r\n        try {\r\n            result = changeFunctor();\r\n        } catch (e) {\r\n            this.changes = null;\r\n            throw e;\r\n        }\r\n        if (this.changes) {\r\n            this.emit('changes', this.changes);\r\n        }\r\n        this.changes = null;\r\n        return result;\r\n    }\r\n\r\n    addListener(callback: ArrayListener) {\r\n        return this.listeners.push(callback);\r\n    }\r\n\r\n    removeListener(callback: ArrayListener) {\r\n        return remove(this.listeners, callback);\r\n    }\r\n\r\n    emit (op: string, args: any[]) {\r\n        for (let i = 0; i < this.listeners.length; ++i) {\r\n            this.listeners[i](op, args);\r\n        }\r\n    }\r\n}\r\n\r\nconst mutables = 'pop push reverse splice shift sort unshift'.split(' ');\r\nfor (const method of mutables) {\r\n    const originalMethod = Array.prototype[method];\r\n    ObservableArray.prototype[method] = function (...args) {\r\n        const returnValue = originalMethod.apply(this, args);\r\n        if (this.changes === null) {\r\n            this.emit(method, args);\r\n        } else {\r\n            this.changes.push([method, args]);\r\n        }\r\n        return returnValue;\r\n    };\r\n}","import * as sp from '../../spui/index';\r\nimport * as utils from '../../spui/utils';\r\nconst h = sp.h;\r\n\r\nfunction createTodo(title: string) {\r\n    return {\r\n        title: sp.createValueStream(title),\r\n        done: sp.createValueStream(false)\r\n    };\r\n}\r\n\r\nfunction spuiTodo () {\r\n    const newTitle = sp.createValueStream('');\r\n    const todos = new sp.ObservableArray();\r\n    \r\n    const addTodo = () => {\r\n        todos.push(createTodo(newTitle()));\r\n        newTitle('');\r\n    };\r\n\r\n    todos.push(createTodo('something'));\r\n    todos.push(createTodo('something else'));\r\n\r\n    const view = h('div', {}, [\r\n        h('input', { type: 'text', value: newTitle, oninput: sp.eventTarget('value', newTitle) }),\r\n        h('button', { onclick: addTodo }, '+'),\r\n        sp.nodeList('ul', {}, todos, (listNode: HTMLElement, todo: any, index: number) => {\r\n            return h('div', {}, [\r\n                h('input', { type: 'checkbox', value: todo.done, onclick: sp.eventTarget('checked', todo.done) }),\r\n                h('input', { type: 'text', value: todo.title, oninput: sp.eventTarget('value', todo.title) }),\r\n                h('a', { onclick: () => utils.remove(todos, todo) }, 'X'),\r\n                // Create bindings on usage of title and done.\r\n                h('span', {}, () => 'title: ' + todo.title() + ' done: ' + todo.done())\r\n            ]);\r\n        })\r\n    ]);\r\n\r\n    document.body.appendChild(view);\r\n}\r\n\r\nspuiTodo();"],"names":["s.computeStream","s.addTransform","h","sp.h","sp.createValueStream","sp.ObservableArray","sp.eventTarget","sp.nodeList","utils.remove"],"mappings":"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"}