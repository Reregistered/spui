{"version":3,"file":"spec.js","sources":["../../spui/utils.ts","../../spui/stream.ts","../../spui/dom.ts","../../spui/observable-array.ts","../../tests/spec.ts"],"sourcesContent":["export interface StringKeyMap<T> {\r\n    [key: string]: T;\r\n}\r\nexport type Functor0P = () => any;\r\nexport type Functor1P = (value: any) => any;\r\n\r\nexport function isFunction(obj): obj is Function {\r\n    return typeof obj === 'function';\r\n}\r\n\r\nexport function isNode(obj): obj is Node {\r\n    return obj.nodeType;\r\n}\r\n\r\nexport function isObject(obj): obj is Object {\r\n    return typeof obj === 'object';\r\n}\r\n\r\nexport function isString(obj): obj is string {\r\n    return typeof obj === 'string'; \r\n}\r\n\r\nexport function expandValue(value): any {\r\n    return isFunction(value) ? value() : value; \r\n}\r\n\r\nexport function remove(array: Array<any>, value) {\r\n    const i = array.indexOf(value);\r\n    if (i !== -1) {\r\n        array.splice(i, 1);\r\n    }\r\n    return array;\r\n}","import { isFunction, remove, Functor0P, Functor1P} from './utils';\r\nexport interface GetterSetter {\r\n    (value?): any;\r\n}\r\nexport interface Stream extends GetterSetter {\r\n    _backingValue: any;\r\n    _listeners?: Array<Functor1P>;\r\n    _transform?: Functor1P;\r\n}\r\nexport interface Computation {\r\n    computedStream: Stream;\r\n    dependencies: Stream[];\r\n}\r\n\r\nlet runningComputations: Array<Computation> = [];\r\n\r\nfunction setValue(stream, value) {\r\n    stream._backingValue = stream._transform ? stream._transform(value) : value;\r\n    if (stream._listeners.length) {\r\n        const dependencies = stream._listeners.slice();\r\n        for (let i = 0; i < dependencies.length; ++i) {\r\n            dependencies[i](stream._backingValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport function valueStream(initialValue?, transform?: Functor1P) : Stream {\r\n    let stream = function (value?) {\r\n        if (arguments.length) {\r\n            setValue(stream, value);\r\n        } else {\r\n            // Check to create a new computation dependency:\r\n            if (runningComputations.length) {\r\n                const computation = runningComputations[runningComputations.length - 1];\r\n                addListener(stream, computation.computedStream);\r\n                computation.dependencies.push(stream);\r\n            }\r\n        }\r\n        \r\n        return stream._backingValue;\r\n    } as Stream;\r\n\r\n    stream._listeners = [];\r\n    if (transform) {\r\n        stream._transform = transform;\r\n    }\r\n    if (initialValue !== undefined) {\r\n        setValue(stream, initialValue);\r\n    }\r\n\r\n    return stream;\r\n}\r\n\r\nexport function addListener(stream: Stream, listener: Functor1P) : Functor0P {\r\n    if (stream._listeners.indexOf(listener) === -1) {\r\n        stream._listeners.push(listener);\r\n    }\r\n    return () => removeListener(stream, listener);\r\n}\r\n\r\nexport function removeListener(valueStream: Stream, listener: Functor1P) : void {\r\n    remove(valueStream._listeners, listener);\r\n}\r\n\r\nexport function addTransform(valueStream: Stream, transform: Functor1P) {\r\n    if (valueStream._transform) {\r\n        const firstTransform = valueStream._transform;\r\n        valueStream._transform = value => transform(firstTransform(value));\r\n    } else {\r\n        valueStream._transform = transform;\r\n    }\r\n}\r\n\r\nexport function map(vs: Stream, transform: Functor1P) : Stream {\r\n    const computedStream = valueStream(vs(), transform);\r\n    addListener(vs, computedStream);\r\n    return computedStream;\r\n}\r\n\r\nfunction createComputation() : Computation {\r\n    return {\r\n        computedStream: valueStream(),\r\n        dependencies: []\r\n    };\r\n}\r\n\r\nexport function compute(functor: Functor0P) : Computation {\r\n    const computation = createComputation();\r\n    computation.computedStream(_compute());\r\n    addTransform(computation.computedStream, _compute);\r\n    return computation;\r\n\r\n    function _compute() {\r\n        runningComputations.push(computation);\r\n        let result, error;\r\n        try {\r\n            result = functor();\r\n        }\r\n        catch (e) {\r\n            error = e;\r\n        }\r\n        runningComputations.pop();\r\n        if (error) throw error;\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function computeStream(functor: Functor0P): Stream {\r\n    return compute(functor).computedStream;\r\n}\r\n\r\nexport function eventStream(source: EventTarget | string, name: string, useCapture?) {\r\n    const eventStream = valueStream();\r\n    const element = source instanceof EventTarget ? source : document.querySelector(source);\r\n    element.addEventListener(name, eventStream, !!useCapture);\r\n    return eventStream;\r\n}","import { isNode, isFunction, isString, isObject, expandValue, StringKeyMap, Functor0P, Functor1P} from './utils';\r\nimport * as s from './stream';\r\nimport {ObservableArray} from './observable-array';\r\n\r\nexport type Attrs = StringKeyMap<any>;\r\nexport type ElementGenerator = () => HTMLElement;\r\nexport type StringGenerator = () => string;\r\nexport type Child = string | HTMLElement | ElementGenerator | StringGenerator;\r\nexport type Children = Array<Child> | Child;\r\nexport type ModelElementCreator = (listRootElement: HTMLElement, model: any, indeX: number) => HTMLElement;\r\n\r\nexport function h(tagName: string, attrs?: Attrs, children?: Children) {\r\n    const element = document.createElement(tagName);\r\n    if (attrs) {\r\n        setAttrs(element, attrs);\r\n    }\r\n\r\n    if (children) {\r\n        setChildren(element, children);\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction setAttrs(element: HTMLElement, attr: Attrs) {\r\n    // For each attr, setup a computation. When that computation is triggered, we patch this argument:\r\n    for (const attrName in attr) {\r\n        const attrValue = attr[attrName];\r\n        // Event registration handling.\r\n        if (attrName.startsWith('on')) {\r\n            const eventName = attrName.slice(2);\r\n            element.addEventListener(eventName, attrValue);\r\n            continue;\r\n        }\r\n\r\n        // If attrValue is an object (for classes and styles)\r\n        // or if attrValue is a function: setup a computation\r\n        if (isFunction(attrValue) || isObject(attrValue)) {\r\n            // For all attributes resulting from a computation setup auto update:\r\n            const computation = s.compute(() => {\r\n                setAttr(element, attrName, attrValue);\r\n            });\r\n\r\n            // Check if the attrValue function has actually registered a dependency:\r\n            if (computation.dependencies.length) {\r\n                s.addTransform(computation.computedStream, () => {\r\n                    setAttr(element, attrName, attrValue);\r\n                });\r\n            }\r\n            continue;\r\n        }\r\n        // Handle static attributes:\r\n        setAttr(element, attrName, attrValue);\r\n    }\r\n}\r\n\r\nfunction setAttr(element: HTMLElement, attr: string, value: any) {\r\n    value = expandValue(value);\r\n    switch(attr) {\r\n        case 'class':\r\n        case 'className':\r\n            setClass(element, value);\r\n        break\r\n        case 'style':\r\n            setStyle(element, value);\r\n        break;\r\n        default: \r\n            if (attr in element) {\r\n                element[attr] = value;\r\n            } else if (value === false) {\r\n                element.removeAttribute(attr);\r\n            } else if (value === true) {\r\n                // If value is a boolean, set it to \"\" to only enable it in DOM.\r\n                element.setAttribute(attr, \"\");\r\n            } else {\r\n                element.setAttribute(attr, value);\r\n            }\r\n    }\r\n}\r\n\r\nfunction setClass(element: HTMLElement, className: string | Attrs) {\r\n    if (isString(className)) {\r\n        element.className = className;\r\n    } else {\r\n        let newClass = '';\r\n        for (const key in className) {\r\n            let value = className[key];\r\n            value = expandValue(value);\r\n            if (value) {\r\n                newClass += (newClass == '' ? '' : ' ' ) + key;\r\n            }\r\n        }\r\n        element.className = newClass;\r\n    }\r\n}\r\n\r\nfunction setStyle(element: HTMLElement, style: Attrs | string, value?) {\r\n    if (isString(style)) {\r\n        element.setAttribute('style', style);\r\n    } else {\r\n        for (const key in style) {\r\n            const styleValue = expandValue(style[key]);\r\n            element.style[key] = styleValue;\r\n        }\r\n    }\r\n}\r\n\r\nfunction setChildren(element: HTMLElement, children: Children) {\r\n    if (Array.isArray(children)) {\r\n        for (let i = 0; i < children.length; ++i) {\r\n            appendChild(element, children[i]);\r\n        }\r\n    } else {\r\n        appendChild(element, children);\r\n    }\r\n}\r\n\r\nfunction appendChild(element: HTMLElement, child: Child) {\r\n    if (!child) return;\r\n    if (isFunction(child)) {\r\n        let resolvedChild: HTMLElement | string;\r\n        const computation = s.compute(() => {\r\n            resolvedChild = child();\r\n        });\r\n\r\n        let childNode = isNode(resolvedChild) ? resolvedChild : document.createTextNode(resolvedChild);\r\n        element.appendChild(childNode);\r\n\r\n        if (computation.dependencies.length) {\r\n            // Auto update in case children is a stream\r\n            s.addTransform(computation.computedStream, () => {\r\n                const oldChildNode = childNode;\r\n                childNode = isNode(resolvedChild) ? resolvedChild : document.createTextNode(resolvedChild);\r\n                element.replaceChild(childNode, oldChildNode);\r\n            });\r\n        }\r\n    } else if (isNode(child)) {\r\n        element.appendChild(child);\r\n    } else {\r\n        element.appendChild(document.createTextNode(child));\r\n    }\r\n}\r\n\r\nexport class ElementListMapper {\r\n    modelsObs: ObservableArray<any>;\r\n    listRootElement: HTMLElement;\r\n    elementCreator: ModelElementCreator;\r\n    key: string;\r\n    modelToElement: Map<any, HTMLElement>;\r\n    constructor(listRootElement: HTMLElement, modelsObs: ObservableArray<any>, elementCreator: ModelElementCreator, key?: string) {\r\n        this.listRootElement = listRootElement;\r\n        this.modelsObs = modelsObs;\r\n        this.elementCreator = elementCreator;\r\n        // TODO: What to do with key?\r\n        this.key = key;\r\n        this.modelToElement = new Map<any, HTMLElement>();\r\n        modelsObs.addListener(this.onModelChange.bind(this));\r\n\r\n        if (this.modelsObs.length) {\r\n            const nodes = this.createElements(this.modelsObs.array, 0);\r\n            this.listRootElement.appendChild(nodes);\r\n        }\r\n    }\r\n\r\n    onModelChange (op: string, args: any[]) {\r\n        switch(op) {\r\n            case 'pop':\r\n                this.listRootElement.removeChild(this.listRootElement.lastChild);\r\n                break;\r\n            case 'push': {\r\n                const nodes = this.createElements(args, this.modelsObs.length - args.length);\r\n                this.listRootElement.appendChild(nodes);\r\n                break;\r\n            }\r\n            case 'reverse': {\r\n                const frag = new DocumentFragment();\r\n                while (this.listRootElement.lastChild) {\r\n                    frag.appendChild(this.listRootElement.removeChild(this.listRootElement.lastChild));\r\n                }\r\n                this.listRootElement.appendChild(frag);\r\n                break;\r\n            };\r\n            case 'splice':\r\n                const childNodes = this.listRootElement.childNodes;\r\n                const spliceStart = args[0] < 0 ? childNodes.length + args[0] : args[0];\r\n                const deleteCount = args.length > 1 ? args[1] : childNodes.length - spliceStart;\r\n                const deleteStop = spliceStart + deleteCount;\r\n                // TODO: have a more flexible splice that doesn't ALWAYS create a toRemove array\r\n                // or keep the list of ordered nodes on the side?\r\n                const toRemove = [];\r\n                for (let i = spliceStart; i < deleteStop; i++) {\r\n                    toRemove.push(childNodes[i]);\r\n                }\r\n                for (let i = 0; i < toRemove.length; ++i) {\r\n                    this.listRootElement.removeChild(toRemove[i]);\r\n                }\r\n\r\n                if (args.length > 2) {\r\n                    const nodes = this.createElements(args.slice(2), spliceStart);\r\n                    this.listRootElement.insertBefore(nodes, childNodes[spliceStart]);\r\n                }\r\n                break;\r\n            case 'shift':\r\n                this.listRootElement.removeChild(this.listRootElement.firstChild);\r\n                break;\r\n            case 'sort': {\r\n                const frag = new DocumentFragment();\r\n                for (let i = 0; i < this.modelsObs.length; ++i) {\r\n                    const node = this.modelToElement.get(this.modelsObs.array[i]);\r\n                    this.listRootElement.removeChild(node);\r\n                    frag.appendChild(node);\r\n                }\r\n                this.listRootElement.appendChild(frag);\r\n                break;\r\n            }\r\n            case 'unshift': {\r\n                const nodes = this.createElements(args, 0);\r\n                this.listRootElement.insertBefore(nodes, this.listRootElement.firstChild);\r\n                break;\r\n            }\r\n            case 'changes': {\r\n                const changes = args;\r\n                for (let i = 0; i < changes.length; ++i) {\r\n                    this.onModelChange(changes[i][0], changes[i][1]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    createElements(models: Array<any>, startIndex: number) : DocumentFragment | HTMLElement {\r\n        if (models.length > 1) {\r\n            const frag = new DocumentFragment();\r\n            for (let i = 0; i < models.length; ++i) {\r\n                const childNode = this.createElement(models[i], startIndex++);\r\n                frag.appendChild(childNode);\r\n            }\r\n            return frag;\r\n        }\r\n\r\n        return this.createElement(models[0], startIndex);\r\n    }\r\n\r\n    createElement(model, index: number) : HTMLElement {\r\n        const childNode = this.elementCreator(this.listRootElement, model, index);\r\n        this.modelToElement.set(model, childNode);\r\n        return childNode;\r\n    }\r\n}\r\n\r\nexport function elementList(tagName: string, attrs: Attrs, models: ObservableArray<any>, nodeCreator: ModelElementCreator, key?: string) {\r\n    const listRootElement = h(tagName, attrs);\r\n    (parent as any)._elementList = new ElementListMapper(listRootElement, models, nodeCreator, key);\r\n    return  listRootElement;\r\n}\r\n\r\nexport function isElementList(nodeListElement: HTMLElement) : boolean {\r\n    return !!((parent as any)._elementList);\r\n}\r\n\r\nexport function getElementList(nodeListElement: HTMLElement): ElementListMapper {\r\n    return (parent as any)._elementList;\r\n}\r\n\r\nexport function targetAttr(eventAttrName: string, functor: s.Stream | Functor1P) {\r\n    return function (event) {\r\n        return functor(event.target[eventAttrName]);\r\n    }\r\n}","import {remove} from './utils';\r\nexport type Changes = Array<Array<any>>;\r\nexport type ArrayListener = (op: string, args: any[], opReturnValue: any) => void;\r\n\r\nexport class ObservableArray<T> {\r\n    array: T[];\r\n    listeners: ArrayListener[];\r\n    changes: Changes;\r\n    constructor(array?: T[]) {\r\n        this.array = array || [];\r\n        this.listeners = [];\r\n        this.changes = null;\r\n    }\r\n\r\n    get length () {\r\n        return this.array.length;\r\n    }\r\n\r\n    push(...args) {\r\n        const retValue = this.array.push.apply(this.array, args);\r\n        this.logChange('push', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    pop(...args) {\r\n        const retValue = this.array.pop.apply(this.array, args);\r\n        this.logChange('pop', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    reverse(...args) {\r\n        const retValue = this.array.reverse.apply(this.array, args);\r\n        this.logChange('reverse', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    shift(...args) {\r\n        const retValue = this.array.shift.apply(this.array, args);\r\n        this.logChange('shift', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    splice(...args) {\r\n        const retValue = this.array.splice.apply(this.array, args);\r\n        this.logChange('splice', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    sort(...args) {\r\n        const retValue = this.array.sort.apply(this.array, args);\r\n        this.logChange('sort', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    unshift(...args) {\r\n        const retValue = this.array.unshift.apply(this.array, args);\r\n        this.logChange('unshift', retValue, args);\r\n        return retValue;\r\n    }\r\n\r\n    remove(value: T) {\r\n        const index = this.array.indexOf(value);\r\n        this.splice(index, 1);\r\n    }\r\n\r\n    applyChanges(changeFunctor: () => any) {\r\n        this.changes = [];\r\n        let result;\r\n        try {\r\n            result = changeFunctor();\r\n        } catch (e) {\r\n            this.changes = null;\r\n            throw e;\r\n        }\r\n        if (this.changes) {\r\n            this.emit('changes', this.changes);\r\n        }\r\n        this.changes = null;\r\n        return result;\r\n    }\r\n\r\n    addListener(callback: ArrayListener) {\r\n        this.listeners.push(callback);\r\n        return () => this.removeListener(callback);\r\n    }\r\n\r\n    removeListener(callback: ArrayListener) {\r\n        return remove(this.listeners, callback);\r\n    }\r\n\r\n    logChange(method, returnValue, args) {\r\n        if (this.changes === null) {\r\n            this.emit(method, args, returnValue);\r\n        } else {\r\n            this.changes.push([method, args, returnValue]);\r\n        }\r\n    }\r\n\r\n    emit(op: string, args: any[], opReturnValue?: any) {\r\n        for (let i = 0; i < this.listeners.length; ++i) {\r\n            this.listeners[i](op, args, opReturnValue);\r\n        }\r\n    }\r\n}\r\n\r\nexport type FilterPredicate<T> = (value: T) => any;\r\nexport class Filter<T> {\r\n    src: ObservableArray<T>;\r\n    filtered: ObservableArray<T>;\r\n    predicate: FilterPredicate<T>;\r\n    constructor(src: ObservableArray<T>, predicate: FilterPredicate<T>) {\r\n        this.src = src;\r\n        this.filtered = new ObservableArray();\r\n        this.predicate = predicate;\r\n\r\n        const srcFiltered = this.src.array.filter(this.predicate);\r\n        this.filtered.push(...srcFiltered);\r\n\r\n        this.src.addListener(this.srcChanged.bind(this));\r\n    }\r\n\r\n    applyFilter(predicate: FilterPredicate<T> = null, reset: boolean = false): Changes {\r\n        if (predicate) {\r\n            this.predicate = predicate;\r\n        }\r\n        const changes = this.filtered.applyChanges(() => {\r\n            if (reset) {\r\n                // Reset filter completely:\r\n                this.filtered.splice(0);\r\n                const filteredValues = this.src.array.filter(this.predicate);\r\n                if (filteredValues.length) {\r\n                    this.filtered.push(...filteredValues);\r\n                }\r\n                return this.filtered.changes;\r\n            } \r\n\r\n            // Apply only differences between 2 filter run:\r\n            let filterIndex = 0;\r\n            for (let srcIndex = 0; srcIndex < this.src.length; ++srcIndex) {\r\n                const srcValue = this.src.array[srcIndex];\r\n                if (this.predicate(srcValue)) {\r\n                    if (filterIndex < this.filtered.length) {\r\n                        if (this.filtered.array[filterIndex] !== srcValue) {\r\n                            this.filtered.splice(filterIndex, 0, srcValue);\r\n                        }\r\n                    } else {\r\n                        this.filtered.splice(filterIndex, 0, srcValue);\r\n                    }\r\n                    ++filterIndex;\r\n                } else {\r\n                    if (filterIndex < this.filtered.length) {\r\n                        if (this.filtered.array[filterIndex] === srcValue) {\r\n                            this.filtered.splice(filterIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // All the others elements are not needed anymore.\r\n            if (filterIndex < this.filtered.length) {\r\n                this.filtered.splice(filterIndex);\r\n            }\r\n            return this.filtered.changes;\r\n        });\r\n        return changes;\r\n    }\r\n\r\n\r\n    private srcChanged(op: string, args: any[], opReturnValue?: any) {\r\n        switch (op) {\r\n            case 'pop':\r\n                if (this.filtered.length && this.filtered.array[this.filtered.length - 1] === opReturnValue) {\r\n                    this.filtered.pop();\r\n                }\r\n                break;\r\n            case 'push': {\r\n                const filterPushedData = args.filter(this.predicate);\r\n                if (filterPushedData.length) {\r\n                    this.filtered.push(...filterPushedData);\r\n                }\r\n                break;\r\n            }\r\n            case 'reverse': {\r\n                if (this.filtered.length) {\r\n                    this.filtered.reverse();\r\n                }\r\n                break;\r\n            };\r\n            case 'splice':\r\n                const elementsToRemove = opReturnValue;\r\n\r\n                const filteredElementsToRemove = elementsToRemove.filter(this.predicate);\r\n                let filteredElementsAdded;\r\n                if (args.length > 2) {\r\n                    const elementsAdded = args.slice(2);\r\n                    filteredElementsAdded = elementsAdded.filter(this.predicate);\r\n                }\r\n\r\n                const srcSpliceStart = args[0] < 0 ? \r\n                    args[0] + this.src.length + elementsToRemove.length - (args.length > 2 ? args.length - 2 : 0) : \r\n                    args[0];\r\n                // Find the insertion point from the start in case not all elements are unique.\r\n                let filteredSpliceStart = 0;\r\n                for (let i = 0; i < srcSpliceStart; ++i) {\r\n                    if (this.predicate(this.src.array[i])) {\r\n                        ++filteredSpliceStart;\r\n                    }\r\n                }\r\n\r\n                if (filteredElementsToRemove && filteredElementsToRemove.length) {\r\n                    if (filteredElementsAdded && filteredElementsAdded.length) {\r\n                        this.filtered.splice(filteredSpliceStart, filteredElementsToRemove.length, ...filteredElementsAdded);\r\n                    } else {\r\n                        this.filtered.splice(filteredSpliceStart, filteredElementsToRemove.length);\r\n                    }\r\n                } else if (filteredElementsAdded && filteredElementsAdded.length) {\r\n                    this.filtered.splice(filteredSpliceStart, 0, ...filteredElementsAdded);\r\n                }\r\n                break;\r\n            case 'shift':\r\n                if (this.filtered.length && this.filtered.array[0] === opReturnValue) {\r\n                    this.filtered.shift();\r\n                }\r\n                break;\r\n            case 'sort': {\r\n                if (this.filtered.length) {\r\n                    this.filtered.sort();\r\n                }\r\n                break;\r\n            }\r\n            case 'unshift': {\r\n                const filterUnshiftedData = args.filter(this.predicate);\r\n                if (filterUnshiftedData.length) {\r\n                    this.filtered.unshift(...filterUnshiftedData);\r\n                }\r\n                break;\r\n            }\r\n            case 'changes': {\r\n                const changes = args;\r\n                for (let i = 0; i < changes.length; ++i) {\r\n                    this.srcChanged.apply(this, changes[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}","import * as sp from '../spui/index';\r\nimport * as utils from '../spui/utils';\r\n\r\nconst h = sp.h;\r\n\r\nfunction double(value) { \r\n    return value * 2;\r\n}\r\n\r\ndescribe('stream', function () {\r\n    describe('value stream', function () {\r\n        it('create no param', function () {\r\n            let stream = sp.valueStream();\r\n            expect(stream()).toBeUndefined();\r\n        });\r\n\r\n        it('create with value', function () {\r\n            const value = 99;\r\n            const stream = sp.valueStream(value);\r\n            expect(stream()).toEqual(value);\r\n\r\n            expect(stream._backingValue).toEqual(value);\r\n            expect(stream._transform).toBeUndefined();\r\n        });\r\n\r\n        it('create with transform', function () {\r\n            const value = 12;\r\n            const stream = sp.valueStream(value, double);\r\n            expect(stream()).toEqual(value * 2);\r\n            expect(stream._transform).toEqual(double);\r\n        });\r\n\r\n        it('setter', function () {\r\n            const stream = sp.valueStream(12);\r\n\r\n            const value = 99;\r\n            stream(value);\r\n            expect(stream()).toEqual(value);\r\n        });\r\n\r\n        it ('add/remove listener', function () {\r\n            const v = sp.valueStream(12);\r\n\r\n            let result;\r\n            function assignResult(value) { result = value; }\r\n\r\n            const off = sp.addListener(v, assignResult);\r\n            expect(utils.isFunction(off)).toEqual(true);\r\n\r\n            const value = 99;\r\n            v(99);\r\n            expect(v()).toEqual(result);\r\n            expect(v._listeners).toBeDefined();\r\n            expect(v._listeners.length).toEqual(1);\r\n            expect(v._listeners.indexOf(assignResult)).toEqual(0);\r\n\r\n            off();\r\n            expect(v._listeners.length).toEqual(0);\r\n\r\n            sp.addListener(v, assignResult);\r\n            expect(v._listeners.length).toEqual(1);\r\n            sp.removeListener(v, assignResult);\r\n            expect(v._listeners.length).toEqual(0);\r\n        });\r\n\r\n        it('map', function () {\r\n            const value = 12;\r\n            const v = sp.valueStream(value);\r\n            const computed = sp.map(v, double);\r\n            expect(computed !== v).toEqual(true);\r\n            expect(v._listeners).toContain(computed);\r\n            expect(computed()).toEqual(value * 2);\r\n            expect(computed._transform).toEqual(double);\r\n        });\r\n\r\n        it ('computation', function () {\r\n            const value1 = 12;\r\n            const value2 = 99;\r\n            const vs1 = sp.valueStream(value1);\r\n            const vs2 = sp.valueStream(value2);\r\n\r\n            const computation = sp.compute(() => {\r\n                return vs1() + vs2();\r\n            });\r\n\r\n            const computedStream = computation.computedStream;\r\n            expect(computation.computedStream).toBeDefined();\r\n            expect(computation.dependencies.length).toEqual(2);\r\n\r\n            expect(vs1._listeners).toContain(computedStream);\r\n            expect(vs2._listeners).toContain(computedStream);\r\n            expect(computedStream()).toEqual(value1 + value2);\r\n\r\n            vs1(0);\r\n            expect(computedStream()).toEqual(value2);\r\n\r\n            vs2(7);\r\n            expect(computedStream()).toEqual(7);\r\n\r\n            // Computed is effectively a read only computed value\r\n            computedStream(12);\r\n            expect(computedStream()).toEqual(7);\r\n        });\r\n    });\r\n});\r\n\r\ndescribe('filter', function () {\r\n    function isEven(value) {\r\n        return value % 2 === 0;\r\n    }\r\n\r\n    function all(value) { \r\n        return true;\r\n    }\r\n\r\n    function none(value) {\r\n        return false;\r\n    }\r\n\r\n    function isOdd(value) {\r\n        return value % 2 === 1;\r\n    }\r\n\r\n    function divisibleBy3(value) {\r\n        return value % 3 === 0;\r\n    }\r\n\r\n    function createThresholdPredicate(minValue, maxValue?) {\r\n        return function (value) {\r\n            return value >= minValue && (maxValue === undefined || value <= maxValue);\r\n        };\r\n    }\r\n\r\n    function createSrc(srcValues: any[]) : sp.ObservableArray<any> {\r\n        const src = new sp.ObservableArray<any>();\r\n        src.push(...srcValues);\r\n        return src;\r\n    }\r\n\r\n    function arrayEqual(a1, a2) {\r\n        if (a1.length !== a2.length) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < a1.length; ++i) {\r\n            if (a1[i] !== a2[i])  {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function expectArrayObserverEqual(a1: sp.ObservableArray<any>, a2) {\r\n        expect(arrayEqual(a1.array, a2)).toEqual(true);\r\n    }\r\n\r\n    it('create filter', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        expect(filter.src).toEqual(src);\r\n        expect(filter.predicate).toEqual(isEven);\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n    });\r\n\r\n    it('pop', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.pop();\r\n        expectArrayObserverEqual(filter.filtered, [2, 4]);\r\n        src.pop();\r\n        expectArrayObserverEqual(filter.filtered, [2, 4]);\r\n    });\r\n\r\n    it('push', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.push(7, 8, 9, 10);\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6, 8, 10]);\r\n    });\r\n\r\n    it('reverse', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.reverse();\r\n        expectArrayObserverEqual(filter.filtered, [6, 4, 2]);\r\n    });\r\n\r\n    it('shift', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.shift();\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n        src.shift();\r\n        expectArrayObserverEqual(filter.filtered, [4, 6]);\r\n    });\r\n\r\n    it('sort', function () {\r\n        const src = createSrc([3, 2, 1, 6, 5, 4]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        expectArrayObserverEqual(filter.filtered, [2, 6, 4]);\r\n        src.sort();\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n    });\r\n\r\n    it('splice 1', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.splice(3);\r\n        expectArrayObserverEqual(filter.filtered, [2]);\r\n    });\r\n\r\n    it('splice 2', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.splice(3, 2);\r\n        expectArrayObserverEqual(filter.filtered, [2, 6]);\r\n    });\r\n\r\n    it('splice 3', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.splice(-3, 2);\r\n        expectArrayObserverEqual(filter.filtered, [2, 6]);\r\n    });\r\n\r\n    it('splice 4', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.splice(3, 0, 11, 22, 33, 44);\r\n        expectArrayObserverEqual(filter.filtered, [2, 22, 44, 4, 6]);\r\n    });\r\n\r\n    it('splice 5', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.splice(-3, 1, 11, 22, 33, 44);\r\n        expectArrayObserverEqual(filter.filtered, [2, 22, 44, 6]);\r\n    });\r\n\r\n    it('unshift', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        src.unshift();\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n        src.unshift(11, 22, 33, 44);\r\n        expectArrayObserverEqual(filter.filtered, [22, 44, 2, 4, 6]);\r\n    });\r\n\r\n    it('changes', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        \r\n        src.applyChanges(() => {\r\n            src.push(-1, -2, -3, -4);\r\n            src.sort();\r\n            src.reverse();\r\n        });\r\n\r\n        expectArrayObserverEqual(filter.filtered, [6, 4, 2, -4, -2]);\r\n    });\r\n\r\n    it('apply filter with predicate at construction', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n\r\n        let changes = filter.applyFilter();\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n        expect(changes.length).toEqual(0);\r\n    });\r\n\r\n    it('apply filter 1', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, all);\r\n        expectArrayObserverEqual(filter.filtered, [1, 2, 3, 4, 5, 6]);\r\n\r\n        let changes = filter.applyFilter(isEven);\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n        // Need to remove 1, 3, 5\r\n        expect(changes.length).toEqual(3);\r\n\r\n        changes = filter.applyFilter(isOdd);\r\n        expectArrayObserverEqual(filter.filtered, [1, 3, 5]);\r\n        // Add 1, remove 2, add 3, remove 4, add 5, remove 6\r\n        expect(changes.length).toEqual(6);\r\n    });\r\n\r\n    it('apply filter 2', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, none);\r\n        expectArrayObserverEqual(filter.filtered, []);\r\n\r\n        let changes = filter.applyFilter(isEven);\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n        // add 2, add, 4, add 6\r\n        expect(changes.length).toEqual(3);\r\n    });\r\n\r\n    it('apply filter 3', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, all);\r\n\r\n        let changes = filter.applyFilter(createThresholdPredicate(2));\r\n        expectArrayObserverEqual(filter.filtered, [2, 3, 4, 5, 6]);\r\n        // Remove 1\r\n        expect(changes.length).toEqual(1);\r\n\r\n        changes = filter.applyFilter(createThresholdPredicate(3));\r\n        expectArrayObserverEqual(filter.filtered, [3, 4, 5, 6]);\r\n        // Remove 2\r\n        expect(changes.length).toEqual(1);\r\n\r\n        changes = filter.applyFilter(createThresholdPredicate(1, 4));\r\n        expectArrayObserverEqual(filter.filtered, [1, 2, 3, 4]);\r\n        // Add 1, add 2, remove 5, remove 6\r\n        expect(changes.length).toEqual(4);\r\n    });\r\n\r\n    it('apply filter 4', function () {\r\n        // TODO: implement more flexible filter that bunches multi splice\r\n\t\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, all);\r\n\r\n        let changes = filter.applyFilter(createThresholdPredicate(4));\r\n        expectArrayObserverEqual(filter.filtered, [4, 5, 6]);\r\n        // Remove 1, 2, 3\r\n        expect(changes.length).toEqual(3);\r\n\r\n        changes = filter.applyFilter(createThresholdPredicate(1, 3));\r\n        expectArrayObserverEqual(filter.filtered, [1, 2, 3]);\r\n        // add 1, 2, 3, remove 4, 5, 6\r\n        expect(changes.length).toEqual(6);\r\n    });\r\n\r\n    it('apply filter reset', function () {\r\n        const src = createSrc([1, 2, 3, 4, 5, 6]);\r\n        const filter = new sp.Filter(src, isEven);\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n\r\n        let changes = filter.applyFilter(null, true);\r\n        expect(changes.length).toEqual(2);\r\n        expectArrayObserverEqual(filter.filtered, [2, 4, 6]);\r\n\r\n        changes = filter.applyFilter(divisibleBy3, true);\r\n        expect(changes.length).toEqual(2);\r\n        expectArrayObserverEqual(filter.filtered, [3, 6]);\r\n\r\n        changes = filter.applyFilter(isOdd, true);\r\n        expect(changes.length).toEqual(2);\r\n        expectArrayObserverEqual(filter.filtered, [1, 3, 5]);\r\n    });\r\n});\r\n\r\nlet _id = 0;\r\nfunction getId() {\r\n    return 'i' + (_id++);\r\n}\r\n\r\nfunction itt (title, itExecutor) {\r\n    it(title, () => {\r\n        itExecutor(title);\r\n    })\r\n}\r\n\r\nfunction xitt(title, itExecutor) {\r\n    xit(title, () => {\r\n        itExecutor(title);\r\n    })\r\n}\r\n\r\ndescribe('dom generation', function () {\r\n    let testDomRoot: HTMLElement;\r\n    beforeAll(function () {\r\n        testDomRoot = document.createElement('div');\r\n        testDomRoot.setAttribute('style', 'padding-top: 10px;');\r\n        document.body.appendChild(testDomRoot);\r\n    });\r\n\r\n    function createElement(tagName, attrs, children?) {\r\n        const id = getId();\r\n        attrs.id = id;\r\n        if (tagName !== 'div') {\r\n            attrs.style = attrs.style || 'display: block;';\r\n        }\r\n        const el = h(tagName, attrs, children);\r\n        expect(el instanceof HTMLElement).toEqual(true);\r\n        testDomRoot.appendChild(el);\r\n        expect(el as Element).toEqual(document.querySelector('#' + id));\r\n\r\n        return el;\r\n    }\r\n\r\n    describe('create elements (static attributes)', function () {\r\n        itt('empty', function (title) {\r\n            const el = h('div');\r\n            expect(el instanceof HTMLElement).toEqual(true);\r\n            testDomRoot.appendChild(el);\r\n            expect(testDomRoot.firstChild).toEqual(el);\r\n        });\r\n\r\n        itt('with single children text node', function (title) {\r\n            const el = createElement('div', {}, title);\r\n            expect(el.textContent).toEqual(title);\r\n        });\r\n\r\n        itt('with style', function (title) {\r\n            const el = createElement('div', {style: 'color: blue;'}, title);\r\n            expect(el.style['color']).toEqual('blue');\r\n        });\r\n\r\n        itt('with style object', function (title) {\r\n            const el = createElement('div', { style: {color: 'blue'} }, title);\r\n            expect(el.style['color']).toEqual('blue');\r\n        });\r\n\r\n        itt('with class', function (title) {\r\n            const c = 'dummy';\r\n            const el = createElement('div', { class: c }, title);\r\n            expect(el.className).toEqual(c);\r\n        });\r\n\r\n        itt('with class object', function (title) {\r\n            const c = { 'blue-text': true, ping: false };\r\n            const el = createElement('div', { class: c }, title);\r\n            expect(el.className).toEqual('blue-text');\r\n        });\r\n\r\n        itt('with class object2', function (title) {\r\n            const c = { 'blue-text': true, pong: true, ping: false };\r\n            const el = createElement('div', { class: c }, title);\r\n            expect(el.className).toEqual('blue-text pong');\r\n        });\r\n\r\n        itt('with event', function (title) {\r\n            let wasClicked = false;\r\n            const onclick = () => {\r\n                wasClicked = true;\r\n                console.log('clicked!')\r\n            };\r\n            const el = createElement('button', { onclick }, title);\r\n            el.click();\r\n            expect(wasClicked).toEqual(true);\r\n        });\r\n\r\n        itt('with boolean attributes', function (title) {\r\n            const el = createElement('input', { disabled: true, readonly: false }, title);\r\n            expect(el.attributes['disabled']).toBeDefined();\r\n            expect(el.attributes['readonly']).toBeUndefined();\r\n        });\r\n    });\r\n\r\n    describe('create elements (attributes auto-binding)', function () {\r\n        itt('with style', function (title) {\r\n            const style = sp.valueStream('color: blue;');\r\n            const el = createElement('div', { style: style }, title);\r\n            expect(el.style['color']).toEqual('blue');\r\n\r\n            style('color: green');\r\n            expect(el.style['color']).toEqual('green');\r\n        });\r\n\r\n        itt('with style object', function (title) {\r\n            const color = sp.valueStream('blue');\r\n            const fontStyle = sp.valueStream('italic');\r\n            const el = createElement('div', { style: { color, 'font-style': fontStyle } }, title);\r\n            expect(el.style['color']).toEqual('blue');\r\n            expect(el.style['font-style']).toEqual('italic');\r\n\r\n            color('green');\r\n            expect(el.style['color']).toEqual('green');\r\n\r\n            fontStyle('oblique');\r\n            expect(el.style['font-style']).toEqual('oblique');\r\n        });\r\n\r\n        itt('with class', function (title) {\r\n            const c = sp.valueStream('blue-text');\r\n            const el = createElement('div', { class: () => 'pow ' + c() }, title);\r\n            expect(el.className).toEqual('pow blue-text');\r\n\r\n            c('green-text');\r\n            expect(el.className).toEqual('pow green-text');\r\n        });\r\n\r\n        itt('with class object', function (title) {\r\n            const blueTextEnabled = sp.valueStream(true);\r\n            const pingEnabled = sp.valueStream(false);\r\n            const c = { 'blue-text': blueTextEnabled, ping: pingEnabled };\r\n            const el = createElement('div', { class: c }, title);\r\n            expect(el.className).toEqual('blue-text');\r\n\r\n            blueTextEnabled(false);\r\n            expect(el.className).toEqual('');\r\n\r\n            pingEnabled(true);\r\n            expect(el.className).toEqual('ping');\r\n        });\r\n\r\n        itt('with boolean attributes', function (title) {\r\n            const isDisabled = sp.valueStream(true);\r\n            const isReadonly = sp.valueStream(false);\r\n\r\n            const el = createElement('input', { disabled: isDisabled, readonly: isReadonly }, title);\r\n            expect(el.attributes['disabled']).toBeDefined();\r\n            expect(el.attributes['readonly']).toBeUndefined();\r\n\r\n            isDisabled(false);\r\n            expect(el.attributes['disabled']).toBeUndefined();\r\n\r\n            isReadonly(true);\r\n            expect(el.attributes['readonly']).toBeDefined();\r\n        });\r\n\r\n        itt('with value', function (title) {\r\n            const value = sp.valueStream('this is my value');\r\n            const el = createElement('input', { value }, title) as HTMLInputElement;\r\n            expect(el.value).toEqual('this is my value');\r\n            el.value = 'dummy-value';\r\n\r\n            value('new value');\r\n            expect(el.value).toEqual('new value');\r\n        });\r\n    });\r\n\r\n    describe('create elements with children (static)', function () {\r\n        itt('with multiple text node', function (title) {\r\n            const childrenText = ['this', ' is', ' something!'];\r\n            const el = createElement('div', {}, childrenText);\r\n            expect(el.children.length).toEqual(0);\r\n            expect(el.childNodes.length).toEqual(3);\r\n            expect(el.textContent).toEqual(childrenText.join(''));\r\n        });\r\n\r\n        itt('with multiple number node', function (title) {\r\n            const childrenText = [7, 69, 666];\r\n            const el = createElement('div', {}, childrenText);\r\n            expect(el.children.length).toEqual(0);\r\n            expect(el.childNodes.length).toEqual(3);\r\n            expect(el.textContent).toEqual(childrenText.join(''));\r\n        });\r\n\r\n        itt('with multiple children', function (title) {\r\n            const childrenText = ['this is', ' something'];\r\n            const el = createElement('div', {}, [\r\n                childrenText[0],\r\n                h('button', {}, 'this is a button'),\r\n                childrenText[1]\r\n            ]);\r\n            expect(el.children.length).toEqual(1);\r\n            expect(el.childNodes.length).toEqual(3);\r\n            expect(el.childNodes[0].nodeValue).toEqual(childrenText[0]);\r\n            expect(el.childNodes[1].nodeName).toEqual('BUTTON');\r\n            expect(el.childNodes[1].textContent).toEqual('this is a button');\r\n            expect(el.childNodes[2].nodeValue).toEqual(childrenText[1]);\r\n        });\r\n    });\r\n\r\n    describe('create elements with children (auto-binding)', function () {\r\n        itt('single child', function (title) {\r\n            const values = ['value1', 'value2', 'value3']\r\n            const singleChildValue = sp.valueStream(values[0]);\r\n            const el = createElement('div', {}, parentElement => singleChildValue());\r\n            expect(el.textContent).toEqual(values[0]);\r\n\r\n            singleChildValue(values[1]);\r\n            expect(el.textContent).toEqual(values[1]);\r\n\r\n            singleChildValue(title);\r\n            expect(el.textContent).toEqual(title);\r\n        });\r\n\r\n        itt('3 text children', function (title) {\r\n            const values = ['value1', 'value2', 'value3']\r\n            const values2 = ['value11', 'value22', 'value32']\r\n            const nodeData1 = sp.valueStream(values[0]);\r\n            const nodeData2 = sp.valueStream(values[1]);\r\n            const nodeData3 = sp.valueStream(values[2]);\r\n            const el = createElement('div', {}, [\r\n                parentElement => nodeData1(),\r\n                parentElement => nodeData2(),\r\n                parentElement => nodeData3(),\r\n            ]);\r\n            expect(el.childNodes.length).toEqual(3);\r\n            expect(el.childNodes[0].nodeValue).toEqual(values[0]);\r\n\r\n            nodeData1(values2[0]);\r\n            expect(el.childNodes[0].nodeValue).toEqual(values2[0]);\r\n\r\n            nodeData3(values2[2]);\r\n            expect(el.childNodes[2].nodeValue).toEqual(values2[2]);\r\n        });\r\n\r\n        itt('children attr', function (title) {\r\n            const isDisabled = sp.valueStream(true);\r\n            const text = sp.valueStream('before');\r\n            let el;\r\n            const root = createElement('div', {}, \r\n                el = h('div', {disabled: isDisabled}, () => text())\r\n            );\r\n\r\n            expect(el.textContent).toEqual(text());\r\n            expect(el.attributes['disabled']).toBeDefined();\r\n\r\n            isDisabled(false);\r\n            expect(el.attributes['disabled']).toBeUndefined();\r\n\r\n            text(title);\r\n            expect(el.textContent).toEqual(title);\r\n        });\r\n\r\n        itt('children stream attr', function (title) {\r\n            const isDisabled = sp.valueStream(true);\r\n            const text = sp.valueStream('before');\r\n            let el;\r\n            const root = createElement('div', {},\r\n                el = h('div', { disabled: isDisabled }, text)\r\n            );\r\n\r\n            expect(el.textContent).toEqual(text());\r\n            expect(el.attributes['disabled']).toBeDefined();\r\n\r\n            isDisabled(false);\r\n            expect(el.attributes['disabled']).toBeUndefined();\r\n\r\n            text(title);\r\n            expect(el.textContent).toEqual(title);\r\n        });\r\n    });\r\n\r\n    interface NodeListData {\r\n        nodeList: HTMLElement,\r\n        models: sp.ObservableArray<any>\r\n    }\r\n    function validateDomList(nld: NodeListData) {\r\n        expect(nld.models.length).toEqual(nld.nodeList.childNodes.length);\r\n        for (let i = 0; i < nld.models.length; ++i) {\r\n            const model = nld.models.array[i];\r\n            const node = nld.nodeList.childNodes[i];\r\n            expect(model.domId).toEqual(node.attributes['id'].value);\r\n        }\r\n    }\r\n\r\n    function setupNodeList(title: string, noIndexCheck = false): NodeListData {\r\n        const models = new sp.ObservableArray<any>();\r\n        const id = getId();\r\n        const attrs = {\r\n            id: id\r\n        };\r\n        let domList;\r\n        const el = h('div', attrs, [\r\n            title + ' : ' + id,\r\n            domList = sp.elementList('ul', attrs, models, (listNode, model, index) => {\r\n                if (!noIndexCheck) {\r\n                    const actualModelIndex = models.array.indexOf(model);\r\n                    expect(actualModelIndex).toEqual(index);\r\n                }\r\n                return h('div', { id: model.domId, class: model.class }, model.text);\r\n            })\r\n        ])\r\n        expect(el instanceof HTMLElement).toEqual(true);\r\n        testDomRoot.appendChild(el);\r\n        expect(el as Element).toEqual(document.querySelector('#' + id));\r\n        const d = {\r\n            nodeList: domList,\r\n            models,\r\n        };\r\n        validateDomList(d);\r\n        return d\r\n    }\r\n\r\n    describe('node-list', function () {\r\n        function createModel() {\r\n            const domId = getId();\r\n            const model = {id: _id, domId, text: 'item: ' + domId};\r\n            return model;\r\n        }\r\n\r\n        itt('push single element', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel());\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('push multiple element', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel());\r\n            d.models.push(createModel());\r\n            d.models.push(createModel());\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('push multi', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel());\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('pop', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel());\r\n            validateDomList(d);\r\n            d.models.pop();\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('reverse', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel());\r\n            validateDomList(d);\r\n            d.models.reverse();\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('splice delete til end', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel());\r\n            d.models.splice(1);\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('splice delete 2', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel(), createModel());\r\n            d.models.splice(1, 2);\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('splice delete and add', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel(), createModel());\r\n            d.models.splice(1, 2, createModel(), createModel());\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('splice add', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel(), createModel());\r\n            d.models.splice(1, 0, createModel(), createModel());\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('shift', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel());\r\n            d.models.shift();\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('sort', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel(), createModel(), createModel());\r\n            d.models.array[0].order = 10;\r\n            d.models.array[1].order = 5;\r\n            d.models.array[2].order = 20;\r\n            d.models.array[3].order = 15;\r\n\r\n            d.models.sort((a, b) => a.order - b.order);\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('unshift single', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel());\r\n            d.models.unshift(createModel());\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('unshift multiple', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel(), createModel());\r\n            d.models.unshift(createModel(), createModel());\r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('changes: push + unshift ', function (title) {\r\n            // No index check on batch operations\r\n            const d = setupNodeList(title, true);\r\n            d.models.applyChanges(() => {\r\n                d.models.push(createModel(), createModel());\r\n                d.models.unshift(createModel(), createModel());\r\n            });\r\n            \r\n            validateDomList(d);\r\n        });\r\n\r\n        itt('changes: swap', function (title) {\r\n            // No index check on batch operations\r\n            const d = setupNodeList(title, true);\r\n            d.models.applyChanges(() => {\r\n                d.models.push(createModel(), createModel(), createModel(), createModel());\r\n                const a = d.models.array[1];\r\n                const b = d.models.array[2];\r\n                d.models.splice(1, 1, b);\r\n                d.models.splice(2, 1, a);\r\n            });\r\n\r\n            validateDomList(d);\r\n        });\r\n    });\r\n\r\n    describe('node-list (auto-binding)', function () {\r\n        function createModel() {\r\n            const domId = getId();\r\n            const textData = sp.valueStream('item: ' + domId);\r\n            const model = { id: _id, domId, text: () => textData(), class: sp.valueStream(domId), textData };\r\n            return model;\r\n        }\r\n\r\n        itt('modify class', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel());\r\n            validateDomList(d);\r\n\r\n            d.models.array[0].class('new-class');\r\n            expect(d.nodeList.children[0].className).toEqual('new-class');\r\n        });\r\n\r\n        itt('modify text', function (title) {\r\n            const d = setupNodeList(title);\r\n            d.models.push(createModel());\r\n            validateDomList(d);\r\n\r\n            d.models.array[0].textData('new-text');\r\n            expect(d.nodeList.children[0].textContent).toEqual('new-text');\r\n        });\r\n    });\r\n\r\n});\r\n"],"names":["s.compute","s.addTransform","h","sp.h","sp.valueStream","sp.addListener","utils.isFunction","sp.removeListener","sp.map","sp.compute","sp.ObservableArray","sp.Filter","sp.elementList"],"mappings":"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"}